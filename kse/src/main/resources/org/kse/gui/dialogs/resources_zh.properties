
DCheckUpdate.NoCheckUpdate.Problem        = 无法检测更新。
DCheckUpdate.NoFindRedirect.message       = 找不到来自 {0} 的重定向。
DCheckUpdate.Non200Response.message       = 检索 \n{1} 时从服务器 ({0}) 收到非 200 响应。
DCheckUpdate.ProblemCheckingUpdate.Title  = 检查更新时出现问题
DCheckUpdate.ProxySettingsIncorrect.Cause = Internet 代理设置不正确. 请在“首选项”中检查。
DCheckUpdate.Title                        = 检查更新
DCheckUpdate.UpdateHostUnavailable.Cause  = 更新主机当前不可用。
DCheckUpdate.jbCancel.text                = 取消
DCheckUpdate.jlCheckUpdate.text           = 正在检查更新...

DCompareCertificates.KeyUsage     = 密钥用法：{0}
DCompareCertificates.Title        = 比较证书 ''{0}'' 与 ''{1}''
DCompareCertificates.jbOK.text    = 是
DCompareCertificates.jlMatch.text = 匹配：{0}%

DExamineSsl.NoKeyStoreSelected.message        = 未选择密钥库。
DExamineSsl.NoPasswordSetForKeyStore.message  = 如果没有设置口令，则无法使用密钥库。
DExamineSsl.PositiveIntegerSslPortReq.message = TLS 端口必须是整数。
DExamineSsl.SslHostReq.message                = 需要 TLS 地址或 IP。
DExamineSsl.SslPortReq.message                = 需要 TLS 端口。
DExamineSsl.Title                             = 检查 TLS
DExamineSsl.jbCancel.text                     = 取消
DExamineSsl.jbLoadKeystore.tooltip            = 从磁盘中打开一个已存在的密钥库
DExamineSsl.jbOK.text                         = 是
DExamineSsl.jcbKeyStore.tooltip               = 选择用于 TLS 客户端身份验证的密钥库
DExamineSsl.jlClientAuth.text                 = 客户端身份验证
DExamineSsl.jlConnSettings.text               = 连接设置
DExamineSsl.jlEnableClientAuth.text           = 启用客户端身份验证
DExamineSsl.jlKeyStore.text                   = 密钥库：
DExamineSsl.jlSslHost.text                    = TLS 地址：
DExamineSsl.jlSslPort.text                    = TLS 端口：
DExamineSsl.jtfSslHost.tooltip                = 要检查的 TLS 连接的地址
DExamineSsl.jtfSslPort.text                   = 443
DExamineSsl.jtfSslPort.tooltip                = 要检查的 TLS 连接的端口

DExaminingSsl.NoExamineSsl.Problem         = 无法检查 ''{0}:{1}'' 的 TLS 证书。
DExaminingSsl.ProblemExaminingSsl.Title    = 检查 TLS 时出现问题
DExaminingSsl.ProxySettingsIncorrect.Cause = Internet 代理设置不正确。请在“首选项”中检查。
DExaminingSsl.SslHostPortIncorrect.Cause   = TLS 地址或端口不正确。
DExaminingSsl.SslHostUnavailable.Cause     = TLS 地址当前不可用。
DExaminingSsl.Title                        = 正在检查 TLS
DExaminingSsl.jbCancel.text                = 取消
DExaminingSsl.jlExaminingSsl.text          = 正在检查 TLS...

DFindKeyStoreEntry.NotEmpty.message = 输入有效的条目名称
DFindKeyStoreEntry.Title            = 查找密钥库条目
DFindKeyStoreEntry.jbCancel.text    = 取消
DFindKeyStoreEntry.jbOK.text        = 是
DFindKeyStoreEntry.jlEntryName.text = 输入名称：

DGenerateCsr.ChallengeRequiredForSpkac.message = SPKAC 需要挑战值。
DGenerateCsr.ChooseCsrFile.Title               = 选择 CSR 文件
DGenerateCsr.ChooseCsrFile.button              = 选择
DGenerateCsr.CsrFileRequired.message           = 需要 CSR 文件的路径。
DGenerateCsr.InvalidDN.message                 = 无效名称（DN）
DGenerateCsr.OverWriteCsrFile.message          = CSR 文件 ''{0}'' 已存在。\n要覆盖它吗？
DGenerateCsr.Title                             = 生成 CSR
DGenerateCsr.jbBrowse.mnemonic                 = B
DGenerateCsr.jbBrowse.text                     = 浏览
DGenerateCsr.jbBrowse.tooltip                  = 浏览 CSR 文件
DGenerateCsr.jbCancel.text                     = 取消
DGenerateCsr.jbOK.text                         = 是
DGenerateCsr.jcbExtensions.text                = 向请求添加证书扩展
DGenerateCsr.jcbExtensions.tooltip             = 将当前证书的扩展作为 extensionRequest 属性添加到 PKCS#10 请求中
DGenerateCsr.jcbSignatureAlgorithm.tooltip     = 用于签名 CSR 的签名算法
DGenerateCsr.jdnName.title                     = 专有名称（DN）
DGenerateCsr.jdnName.tooltip                   = 证书名称（DN）
DGenerateCsr.jlChallenge.text                  = 挑战值：
DGenerateCsr.jlCsrFile.text                    = CSR 文件：
DGenerateCsr.jlExtensions.text                 = 扩展：
DGenerateCsr.jlFormat.text                     = 格式：
DGenerateCsr.jlName.text                       = 专有名称（DN）
DGenerateCsr.jlSignatureAlgorithm.text         = 签名算法：
DGenerateCsr.jlUnstructuredName.text           = 可选公司名称：
DGenerateCsr.jrbPkcs10.mnemonic                = P
DGenerateCsr.jrbPkcs10.text                    = PKCS#10
DGenerateCsr.jrbPkcs10.tooltip                 = 最常用的格式，RSA的CSR格式
DGenerateCsr.jrbSpkac.mnemonic                 = S
DGenerateCsr.jrbSpkac.text                     = SPKAC
DGenerateCsr.jrbSpkac.tooltip                  = 签名公钥和挑战 (SPKAC)，Netscape 的 CSR 格式
DGenerateCsr.jtfChallenge.tooltip              = <html>挑战口令，用于后续请求证书吊销。<br>PKCS#10 格式下为可选，SPKAC 格式下必须提供。</html>
DGenerateCsr.jtfCsrFile.tooltip                = 生成 CSR 的文件在
DGenerateCsr.jtfUnstructuredName.tooltip       = 可选的公司名称，用于与 OpenSSL 兼容（PKCS#10 属性“unstructuredName”）

DGenerateDHParameters.Title                = 生成 Diffie-Hellman 参数
DGenerateDHParameters.jbCancel.text        = 取消
DGenerateDHParameters.jbOK.text            = 是
DGenerateDHParameters.jcbDHKeySize.tooltip = 设置密钥长度（以位为单位）
DGenerateDHParameters.jlDHKeySize.text     = 密钥长度：
DGenerateDHParameters.jpContent.text       = 密钥长度选择
DGenerateDHParameters.jtAreaFooter.text    = 对于长度大于 2048 位的密钥，请使用 OpenSSL。示例：\nopenssl dhparam -out dhparam.pem 2048

DGenerateKeyPair.Title                              = 生成密钥对
DGenerateKeyPair.jbCancel.text                      = 取消
DGenerateKeyPair.jbOK.text                          = 是
DGenerateKeyPair.jcbECCurve.tooltip                 = 命名曲线（通过标准化域参数定义的椭圆曲线）
DGenerateKeyPair.jcbECCurveSet.tooltip              = 标准文档中定义的一组命名曲线
DGenerateKeyPair.jlECCurve.text                     = 命名曲线：
DGenerateKeyPair.jlECCurve.tooltip                  = 命名曲线（通过标准化域参数定义的椭圆曲线）
DGenerateKeyPair.jlECCurveSet.text                  = 设置：
DGenerateKeyPair.jlECCurveSet.tooltip               = 标准文档中定义的一组命名曲线
DGenerateKeyPair.jlKeySize.text                     = 密钥长度：
DGenerateKeyPair.jpContent.text                     = 算法选择
DGenerateKeyPair.jrbDSA.mnemonic                    = D
DGenerateKeyPair.jrbDSA.text                        = DSA
DGenerateKeyPair.jrbDSA.tooltip                     = DSA（数字签名算法）密钥对
DGenerateKeyPair.jrbEC.mnemonic                     = E
DGenerateKeyPair.jrbEC.na.tooltip                   = EC 仅适用于 Java 7 及更高版本或密钥存储类型为 BKS、UBER 或 PKCS12
DGenerateKeyPair.jrbEC.text                         = EC
DGenerateKeyPair.jrbEC.tooltip                      = ECC（椭圆曲线密码学）密钥对
DGenerateKeyPair.jrbRSA.mnemonic                    = R
DGenerateKeyPair.jrbRSA.text                        = RSA
DGenerateKeyPair.jrbRSA.tooltip                     = RSA（Rivest, Shamir, Adleman）密钥对
DGenerateKeyPair.jsKeySize.tooltip                  = 密钥长度（位）

DGenerateKeyPairCert.CritSANReq.message             = 若持有者专有名称（Subject DN）为空，则证书必须包含标记为关键性（critical）的持有者备用名称扩展（subjectAltName extension）
DGenerateKeyPairCert.NameValueReq.message           = 名称需要一个值。
DGenerateKeyPairCert.SerialNumberNonZero.message    = 序列号必须大于零。
DGenerateKeyPairCert.SerialNumberNotInteger.message = 序列号必须是整数。
DGenerateKeyPairCert.ValReqSerialNumber.message     = 序列号需要一个值。
DGenerateKeyPairCert.jbAddExtensions.mnemonic       = A
DGenerateKeyPairCert.jbAddExtensions.text           = 添加扩展
DGenerateKeyPairCert.jbAddExtensions.tooltip        = 向证书添加证书扩展
DGenerateKeyPairCert.jbCancel.text                  = 取消
DGenerateKeyPairCert.jbOK.text                      = 是
DGenerateKeyPairCert.jbTransferNameExt.mnemonic     = T
DGenerateKeyPairCert.jbTransferNameExt.text         = 转移名称和扩展
DGenerateKeyPairCert.jbTransferNameExt.tooltip      = 从证书转移名称和扩展
DGenerateKeyPairCert.jcbSignatureAlgorithm.tooltip  = 用于对证书进行签名的签名算法
DGenerateKeyPairCert.jdnName.title                  = 名称
DGenerateKeyPairCert.jdnName.tooltip                = 证书名称（DN）
DGenerateKeyPairCert.jdtValidityEnd.text            = 有效期终止时间
DGenerateKeyPairCert.jdtValidityEnd.tooltip         = 证书有效期终止时间
DGenerateKeyPairCert.jdtValidityStart.text          = 有效期起始时间
DGenerateKeyPairCert.jdtValidityStart.tooltip       = 证书有效期起始时间
DGenerateKeyPairCert.jlName.text                    = 名称：
DGenerateKeyPairCert.jlSerialNumber.text            = 序列号：
DGenerateKeyPairCert.jlSigAlg.text                  = 签名算法：
DGenerateKeyPairCert.jlValidityEnd.text             = 有效期终止时间：
DGenerateKeyPairCert.jlValidityPeriod.text          = 有效期：
DGenerateKeyPairCert.jlValidityStart.text           = 有效期起始时间：
DGenerateKeyPairCert.jlVersion.text                 = 版本：
DGenerateKeyPairCert.jrbVersion1.text               = 版本 1
DGenerateKeyPairCert.jrbVersion1.tooltip            = 版本 1 证书 - 不支持扩展
DGenerateKeyPairCert.jrbVersion3.text               = 版本 3
DGenerateKeyPairCert.jrbVersion3.tooltip            = 版本 3 证书 - 不支持扩展
DGenerateKeyPairCert.jtfSerialNumber.tooltip        = 证书序列号
DGenerateKeyPairCert.jvpValidityPeriod.tooltip      = 证书有效期

DGenerateSecretKey.Title             = 生成私钥
DGenerateSecretKey.jbCancel.text     = 取消
DGenerateSecretKey.jbOK.text         = 是
DGenerateSecretKey.jcbKeyAlg.tooltip = 私钥算法
DGenerateSecretKey.jlKeyAlg.text     = 算法：
DGenerateSecretKey.jlKeySize.text    = 密钥长度：
DGenerateSecretKey.jsKeySize.tooltip = 密钥长度（位）

DGeneratingDHParameters.Title                  = 生成 DH 参数
DGeneratingDHParameters.jbCancel.text          = 取消
DGeneratingDHParameters.jlGenDHParameters.text = 生成 DH 参数...

DGeneratingKeyPair.Title             = 生成密钥对
DGeneratingKeyPair.jbCancel.text     = 取消
DGeneratingKeyPair.jlGenKeyPair.text = 生成密钥对...

DGetAlias.AliasReq.message = 必须提供别名。
DGetAlias.jbCancel.text    = 取消
DGetAlias.jbOK.text        = 是
DGetAlias.jlAlias.text     = 输入别名：

DNewKeyStoreType.Title                      = 新的密钥库类型
DNewKeyStoreType.jbCancel.text              = 取消
DNewKeyStoreType.jbOK.text                  = 是
DNewKeyStoreType.jlKeyStoreType.text        = 选择新密钥库类型：
DNewKeyStoreType.jrbBcfksKeyStore.mnemonic  = F
DNewKeyStoreType.jrbBcfksKeyStore.text      = BCFKS
DNewKeyStoreType.jrbBcfksKeyStore.tooltip   = Bouncy Castle FIPS 密钥库（轻量级开源加密库）
DNewKeyStoreType.jrbBksKeyStore.mnemonic    = B
DNewKeyStoreType.jrbBksKeyStore.text        = BKS
DNewKeyStoreType.jrbBksKeyStore.tooltip     = Bouncy Castle FIPS 密钥库（Bouncy Castle 实现的 JKS 格式）
DNewKeyStoreType.jrbBksV1KeyStore.mnemonic  = V
DNewKeyStoreType.jrbBksV1KeyStore.text      = BKS-V1
DNewKeyStoreType.jrbBksV1KeyStore.tooltip   = Bouncy Castle FIPS 密钥库（Bouncy Castle 实现的 JKS 版本 1
DNewKeyStoreType.jrbJceksKeyStore.mnemonic  = J
DNewKeyStoreType.jrbJceksKeyStore.text      = JCEKS
DNewKeyStoreType.jrbJceksKeyStore.tooltip   = Java 密码扩展 KeyStore（Oracle 的高级 KeyStore 格式）
DNewKeyStoreType.jrbJksKeyStore.mnemonic    = K
DNewKeyStoreType.jrbJksKeyStore.text        = JKS
DNewKeyStoreType.jrbJksKeyStore.tooltip     = Java KeyStore（Oracle 的基本 KeyStore 格式）
DNewKeyStoreType.jrbPkcs12KeyStore.mnemonic = P
DNewKeyStoreType.jrbPkcs12KeyStore.text     = PKCS #12
DNewKeyStoreType.jrbPkcs12KeyStore.tooltip  = 公钥密码标准 #12 KeyStore（RSA 的 KeyStore 格式）
DNewKeyStoreType.jrbUberKeyStore.mnemonic   = U
DNewKeyStoreType.jrbUberKeyStore.text       = UBER
DNewKeyStoreType.jrbUberKeyStore.tooltip    = Bouncy Castle UBER KeyStore（BKS 的更安全版本）

DOpenPkcs11KeyStore.32with64bit.Cause              = 64 位 PKCS#11 库不能在 32 位 JRE 中使用（反之亦然）。
DOpenPkcs11KeyStore.64bitBeforeJRE8.Cause          = 64 位 Java 7 运行时（及更早版本）不支持 PKCS#11 提供程序。
DOpenPkcs11KeyStore.NotPkcs11Lib.Cause             = 所选文件不是 PKCS#11 库。
DOpenPkcs11KeyStore.ProblemLoadingProvider.Problem = 无法使用 ''{0}'' 初始化 PKCS#11 提供程序。
DOpenPkcs11KeyStore.ProblemLoadingProvider.Title   = 初始化 PKCS#11 提供程序时出现问题
DOpenPkcs11KeyStore.SelectLib.Title                = 选择 PKCS#11 库
DOpenPkcs11KeyStore.SelectLib.button               = 选择
DOpenPkcs11KeyStore.Title                          = 打开 PKCS#11 密钥库
DOpenPkcs11KeyStore.WrongConfiguration.Cause       = 配置错误。
DOpenPkcs11KeyStore.jbCancel.text                  = 取消
DOpenPkcs11KeyStore.jbOK.text                      = 是
DOpenPkcs11KeyStore.jbP11LibraryBrowse.tooltip     = 浏览本机 PKCS#11 库。
DOpenPkcs11KeyStore.jcbPkcs11Provider.tooltip      = 如果已经通过 java.security 安装了 SunPKCS11 提供程序，则所有实例都会列在这里。
DOpenPkcs11KeyStore.jlP11Library.text              = PKCS#11 库：
DOpenPkcs11KeyStore.jlSelectProvider.text          = 选择实例：
DOpenPkcs11KeyStore.jlSlotListIndex.text           = 插槽索引：
DOpenPkcs11KeyStore.jrbCreateNew.mnemonic          = C
DOpenPkcs11KeyStore.jrbCreateNew.text              = 注册新的 PKCS#11 提供程序
DOpenPkcs11KeyStore.jrbUseExisting.mnemonic        = U
DOpenPkcs11KeyStore.jrbUseExisting.text            = 使用已安装的 PKCS#11 提供程序
DOpenPkcs11KeyStore.jspSlotListIndex.tooltip       = 插槽列表索引，0 表示列表中第一个插槽。
DOpenPkcs11KeyStore.jtfP11Library.tooltip          = 本机 PKCS#11 库的路径。
DOpenPkcs11KeyStore.noLibSelected.message          = 您必须首先选择一个 PKCS#11 库。
DOpenPkcs11KeyStore.providerNotInstalled.message   = PKCS#11 提供程序未安装！

DProperties.NoGetProperties.exception.message      = 无法获取密钥库属性。
DProperties.Title                                  = ''{0}'' 的属性
DProperties.jbCopy.mnemonic                        = C
DProperties.jbCopy.text                            = 复制
DProperties.jbCopy.tooltip                         = 复制属性到剪切板
DProperties.jbOK.text                              = 是
DProperties.properties.Algorithm                   = 算法：{0}
DProperties.properties.Certificates                = 证书
DProperties.properties.Encoded                     = 编码：{0}
DProperties.properties.File                        = 文件：{0}
DProperties.properties.Format                      = 格式：{0}
DProperties.properties.Issuer                      = 持有者：{0}
DProperties.properties.KeyPairs                    = 密钥对
DProperties.properties.KeySize                     = 密钥长度：{0} bits
DProperties.properties.Keys                        = 密钥
DProperties.properties.LastModified                = 最后修改时间：{0}
DProperties.properties.Locked                      = 已锁定 - 解锁以获取属性
DProperties.properties.Md5Fingerprint              = MD5 指纹：{0}
DProperties.properties.None                        = 空的
DProperties.properties.PrivateKey                  = 私钥
DProperties.properties.Provider                    = 提供程序：{0}
DProperties.properties.PublicKey                   = 公钥
DProperties.properties.Root                        = ''{0}'' 的属性
DProperties.properties.SecretKey                   = 私钥
DProperties.properties.SerialNumber                = 序列号：{0}
DProperties.properties.Sha1Fingerprint             = SHA-1 指纹：{0}
DProperties.properties.SignatureAlgorithm          = 签名算法：{0}
DProperties.properties.Subject                     = 持有者：{0}
DProperties.properties.TrustedCertificates         = 可信证书
DProperties.properties.Type                        = 类型：{0}
DProperties.properties.ValidFrom                   = 有效期：{0}
DProperties.properties.ValidUntil                  = 有效期至：{0}
DProperties.properties.Version                     = 版本：{0}
DProperties.properties.private.dsa.GeneratorG      = 生成元 G：{0}
DProperties.properties.private.dsa.PrimeModulusP   = 素数模数 P：{0}
DProperties.properties.private.dsa.PrimeQ          = 素数 Q：{0}
DProperties.properties.private.dsa.SecretExponentX = 私钥指数 X：{0}
DProperties.properties.private.rsa.CrtCoefficient  = CRT 系数（中国剩余定理）：{0}
DProperties.properties.private.rsa.Modulus         = 模数：{0}
DProperties.properties.private.rsa.PrimeExponentP  = 素数指数 P：{0}
DProperties.properties.private.rsa.PrimeExponentQ  = 素数指数 Q：{0}
DProperties.properties.private.rsa.PrimeP          = 素数 P：{0}
DProperties.properties.private.rsa.PrimeQ          = 素数 Q：{0}
DProperties.properties.private.rsa.PrivateExponent = 私钥指数：{0}
DProperties.properties.private.rsa.PublicExponent  = 公钥指数：{0}
DProperties.properties.public.dsa.GeneratorG       = 生成元 G：{0}
DProperties.properties.public.dsa.PrimeModulusP    = 素数模数 P：{0}
DProperties.properties.public.dsa.PrimeQ           = 素数 Q：{0}
DProperties.properties.public.dsa.PublicKeyY       = 公钥 Y：{0}
DProperties.properties.public.rsa.Modulus          = 模数：{0}
DProperties.properties.public.rsa.PublicExponent   = 公钥指数：{0}

DVerifyCertificate.ChooseCACertificatesKeyStore.Title = 选择 CA 证书密钥库
DVerifyCertificate.ChooseCRLFile.Title                = 选择 CRL 文件
DVerifyCertificate.ChooseCRLFile.button               = 选择
DVerifyCertificate.ReqOcspUrl.Title                   = OCSP URL 需要一个值
DVerifyCertificate.Title                              = 验证证书 ''{0}''
DVerifyCertificate.jbBrowse.text                      = 浏览
DVerifyCertificate.jbCancel.text                      = 取消
DVerifyCertificate.jbLoadCrl.tooltip                  = 从磁盘打开 CRL
DVerifyCertificate.jbLoadKeystore.tooltip             = 从磁盘打开密钥库
DVerifyCertificate.jbOk.text                          = 是
DVerifyCertificate.jcbKeyStore.tooltip                = 选择密钥库
DVerifyCertificate.jcbOcspDigestAlgorithm.tooltip     = 选择在 OCSP 请求中使用的摘要算法
DVerifyCertificate.jcbOcspIncludeNonce.text           = 包括 Nonce
DVerifyCertificate.jcbOcspIncludeNonce.tooltip        = 在 OCSP 请求中包含 RFC 8954 nonce 扩展
DVerifyCertificate.jcbSelectKeyStore.text             = 使用备用 CA 密钥库来验证证书：
DVerifyCertificate.jlCacertFile.text                  = 密钥库：
DVerifyCertificate.jlCheckStatus.text                 = 验证证书链并检查吊销状态
DVerifyCertificate.jlKeyStore.text                    = 密钥库：
DVerifyCertificate.jlOcspDigestAlgorithm.text         = 摘要算法：
DVerifyCertificate.jrbChainCheck.text                 = 不检查吊销状态，仅验证证书链
DVerifyCertificate.jrbChainCheck.tooltip              = 验证证书链
DVerifyCertificate.jrbCrlCheckDistPoint.text          = CRL 分发点扩展
DVerifyCertificate.jrbCrlCheckDistPoint.tooltip       = 通过尝试查找有效的 CRL 来检查最终实体证书的有效性
DVerifyCertificate.jrbCrlCheckFile.text               = CRL 文件
DVerifyCertificate.jrbCrlCheckFile.tooltip            = 通过尝试查找有效的 CRL 来检查最终实体证书的有效性
DVerifyCertificate.jrbOcspAiaCheck.text               = 来自授权机构的 OCSP\u00A0信息\u00A0访问扩展
DVerifyCertificate.jrbOcspAiaCheck.tooltip            = 使用 AIA 扩展中的 OCSP URL
DVerifyCertificate.jrbOcspUrlCheck.text               = 带 URL 的 OCSP
DVerifyCertificate.jrbOcspUrlCheck.tooltip            = 在线证书状态协议
DVerifyCertificate.jtfCrlFile.tooltip                 = CRL 文件
DVerifyCertificate.jtfOcspUrl.tooltip                 = URL

DViewAsn1Dump.Certificate.Title = 证书 ASN.1 转储
DViewAsn1Dump.Crl.Title         = CRL ASN.1 转储
DViewAsn1Dump.Cms.Title         = CMS ASN.1 转储
DViewAsn1Dump.Csr.Title         = PKCS#10 请求 ASN.1 转储
DViewAsn1Dump.Extension.Title   = 扩展 ASN.1 转储
DViewAsn1Dump.PrivateKey.Title  = 私钥 ASN.1 转储
DViewAsn1Dump.PublicKey.Title   = 公钥 ASN.1 转储
DViewAsn1Dump.SignerInfo.Title  = 签发者信息 ASN.1 转储
DViewAsn1Dump.jbCopy.mnemonic   = C
DViewAsn1Dump.jbCopy.text       = 复制
DViewAsn1Dump.jbCopy.tooltip    = 复制 ASN.1 转储到剪切板
DViewAsn1Dump.jbOK.text         = 是

DViewAsymmetricKeyFields.PrivateKey.title                      = {0} 私钥字段
DViewAsymmetricKeyFields.PublicKey.title                       = {0} 公钥字段
DViewAsymmetricKeyFields.jbOK.text                             = 是
DViewAsymmetricKeyFields.jlFieldValue.text                     = 字段值：
DViewAsymmetricKeyFields.jlFields.text                         = 字段：
DViewAsymmetricKeyFields.jltFields.PrivDsaGeneratorG.text      = 生成元 G
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeModulusP.text   = 素数模数 P
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeQ.text          = 素数 Q
DViewAsymmetricKeyFields.jltFields.PrivDsaSecretExponentX.text = 私钥指数 X
DViewAsymmetricKeyFields.jltFields.PrivEcPrivateKey.text       = 私钥
DViewAsymmetricKeyFields.jltFields.PrivEdPrivateKey.text       = 私钥
DViewAsymmetricKeyFields.jltFields.PrivRsaCrtCoefficient.text  = CRT 系数
DViewAsymmetricKeyFields.jltFields.PrivRsaModulus.text         = 模数
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentP.text  = 素数指数 P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentQ.text  = 素数指数 Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeP.text          = 素数 P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeQ.text          = 素数 Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrivateExponent.text = 私钥指数
DViewAsymmetricKeyFields.jltFields.PrivRsaPublicExponent.text  = 公钥指数
DViewAsymmetricKeyFields.jltFields.PubDsaGeneratorG.text       = 生成元 G
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeModulusP.text    = 素数模数 P
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeQ.text           = 素数 Q
DViewAsymmetricKeyFields.jltFields.PubDsaPublicKeyY.text       = 公钥 Y
DViewAsymmetricKeyFields.jltFields.PubEcAffineX.text           = 仿射坐标 X
DViewAsymmetricKeyFields.jltFields.PubEcAffineY.text           = 仿射坐标 Y
DViewAsymmetricKeyFields.jltFields.PubEdKey.text               = 公钥
DViewAsymmetricKeyFields.jltFields.PubRsaModulus.text          = 模数
DViewAsymmetricKeyFields.jltFields.PubRsaPublicExponent.text   = 公钥指数
DViewAsymmetricKeyFields.jltFields.tooltip                     = 显示密钥字段
DViewAsymmetricKeyFields.jtaFieldValue.tooltip                 = 显示已选中的密钥字段

DViewCertificate.Extensions.Title                   = 证书扩展
DViewCertificate.Issuer.Title                       = 颁发者
DViewCertificate.NoGetEncodedCert.exception.message = 无法获取证书的编码形式。
DViewCertificate.Pem.Title                          = 证书 PEM
DViewCertificate.PubKeyDetails.Title                = 公钥详细信息
DViewCertificate.Subject.Title                      = 持有者
DViewCertificate.jbAsn1.mnemonic                    = A
DViewCertificate.jbAsn1.text                        = ASN.1
DViewCertificate.jbAsn1.tooltip                     = 显示证书的 ASN.1 转储
DViewCertificate.jbExport.mnemonic                  = X
DViewCertificate.jbExtensions.mnemonic              = E
DViewCertificate.jbExtensions.text                  = 扩展
DViewCertificate.jbExtensions.tooltip               = 显示证书扩展
DViewCertificate.jbImport.mnemonic                  = I
DViewCertificate.jbImportExport.export.text         = 导出
DViewCertificate.jbImportExport.export.tooltip      = 将证书导出到文件
DViewCertificate.jbImportExport.import.text         = 导入
DViewCertificate.jbImportExport.import.tooltip      = 导入证书到密钥库
DViewCertificate.jbOK.text                          = 是
DViewCertificate.jbPem.mnemonic                     = P
DViewCertificate.jbPem.text                         = PEM
DViewCertificate.jbPem.tooltip                      = 显示 PEM 格式证书
DViewCertificate.jbVerify.mnemonic                  = V
DViewCertificate.jbVerify.text                      = 验证
DViewCertificate.jbVerify.tooltip                   = 验证证书
DViewCertificate.jbViewPublicKeyDetails.tooltip     = 显示公钥详细信息
DViewCertificate.jdnIssuer.tooltip                  = 证书颁发者的专有名称
DViewCertificate.jdnSubject.tooltip                 = 证书持有者的专有名称
DViewCertificate.jlFingerprint.text                 = 指纹：
DViewCertificate.jlHierarchy.text                   = 证书层次结构：
DViewCertificate.jlIssuer.text                      = 颁发者：
DViewCertificate.jlPublicKey.text                   = 公钥：
DViewCertificate.jlSerialNumberDec.text             = 序列号（十进制）：
DViewCertificate.jlSerialNumberHex.text             = 序列号（十六进制）：
DViewCertificate.jlSignatureAlgorithm.text          = 签名算法：
DViewCertificate.jlSubject.text                     = 持有者：
DViewCertificate.jlValidFrom.text                   = 有效期自：
DViewCertificate.jlValidUntil.text                  = 有效期至：
DViewCertificate.jlVersion.text                     = 版本：
DViewCertificate.jtfPublicKey.text                  = {0} {1} bits
DViewCertificate.jtfPublicKey.tooltip               = 证书的公钥算法
DViewCertificate.jtfSerialNumberDec.tooltip         = 颁发者分配的证书序列号（十进制格式）
DViewCertificate.jtfSerialNumberHex.tooltip         = 颁发者分配的证书序列号（十六进制格式）
DViewCertificate.jtfSignatureAlgorithm.tooltip      = 用于签署证书的签名算法
DViewCertificate.jtfValidFrom.notyetvalid.text      = {0}（尚未生效）
DViewCertificate.jtfValidFrom.tooltip               = 证书自此日起生效
DViewCertificate.jtfValidUntil.expired.text         = {0}（已到期）
DViewCertificate.jtfValidUntil.tooltip              = 证书有效期至该日期
DViewCertificate.jtfVersion.tooltip                 = 证书序列号

DViewCrl.EntryExtensions.Title              = 吊销证书扩展
DViewCrl.Extensions.Title                   = CRL 扩展
DViewCrl.Issuer.Title                       = 颁发者
DViewCrl.jbCrlAsn1.mnemonic                 = A
DViewCrl.jbCrlAsn1.text                     = ASN.1
DViewCrl.jbCrlAsn1.tooltip                  = 显示 CRL 的 ASN.1 转储
DViewCrl.jbCrlEntryExtensions.mnemonic      = x
DViewCrl.jbCrlEntryExtensions.text          = 扩展
DViewCrl.jbCrlEntryExtensions.tooltip       = 显示已吊销证书的扩展
DViewCrl.jbCrlExtensions.mnemonic           = E
DViewCrl.jbCrlExtensions.text               = 扩展
DViewCrl.jbCrlExtensions.tooltip            = 显示 CRL 扩展
DViewCrl.jbOK.text                          = 是
DViewCrl.jdnIssuer.tooltip                  = CRL 颁发者的专有名称
DViewCrl.jlEffectiveDate.text               = 生效日期：
DViewCrl.jlIssuer.text                      = 颁发者：
DViewCrl.jlNextUpdate.text                  = 下次更新：
DViewCrl.jlRevokedCerts.text                = {0,choice,0#Empty CRL (no entries).|1#One revoked Certificate:|1<Revoked Certificates ({0,number,integer} entries):}
DViewCrl.jlSignatureAlgorithm.text          = 签名算法：
DViewCrl.jlVersion.text                     = 版本：
DViewCrl.jtfEffectiveDate.noteffective.text = {0}（尚未生效）
DViewCrl.jtfEffectiveDate.tooltip           = CRL 自此日期起生效
DViewCrl.jtfNextUpdate.none.text            = 空的
DViewCrl.jtfNextUpdate.tooltip              = 下次 CRL 更新日期
DViewCrl.jtfNextUpdate.updateavailable.text = {0}（有更新）
DViewCrl.jtfSignatureAlgorithm.tooltip      = 用于签署 CRL 的签名算法
DViewCrl.jtfVersion.tooltip                 = CRL 的版本号

DViewCsr.NoGetPublicKey.message         = 无法获取 CSR 的公钥。
DViewCsr.Pem.Title                      = 以 PEM 格式查看 PKCS#10 CSR
DViewCsr.PubKeyDetails.Title            = 公钥详细信息
DViewCsr.SaveCaReply.Title              = 选择 CA Reply 文件
DViewCsr.SaveCaReply.button             = 选择
DViewCsr.Subject.Title                  = 持有者
DViewCsr.Title                          = 签名 CSR
DViewCsr.jbAsn1.mnemonic                = A
DViewCsr.jbAsn1.text                    = ASN.1
DViewCsr.jbAsn1.tooltip                 = 显示 CSR 的 ASN.1 转储
DViewCsr.jbExtensions.mnemonic          = E
DViewCsr.jbExtensions.text              = 扩展
DViewCsr.jbExtensions.tooltip           = 显示 CSR 扩展
DViewCsr.jbVerify.mnemonic              = V
DViewCsr.jbVerify.text                  = 验证
DViewCsr.jbVerify.tooltip               = 验证 CSR 签名
DViewCsr.jbOK.text                      = OK
DViewCsr.jbPem.mnemonic                 = P
DViewCsr.jbPem.text                     = PEM
DViewCsr.jbPem.tooltip                  = 以 PEM 格式显示 CSR
DViewCsr.jbViewPublicKeyDetails.tooltip = 显示公钥详细信息
DViewCsr.jdnSubject.tooltip             = CSR 持有者的专有名称
DViewCsr.jlChallenge.text               = 挑战：
DViewCsr.jlFormat.text                  = 格式：
DViewCsr.jlPublicKey.text               = 公钥：
DViewCsr.jlSignatureAlgorithm.text      = 签名算法：
DViewCsr.jlSubject.text                 = 持有者：
DViewCsr.jlUnstructuredName.text        = 非结构化名称：
DViewCsr.jtfChallenge.tooltip           = <html>CSR 的挑战密码。<br>用于请求证书吊销</html>
DViewCsr.jtfFormat.Pkcs10.text          = PKCS #10
DViewCsr.jtfFormat.Spkac.text           = SPKAC
DViewCsr.jtfFormat.tooltip              = CSR 格式（PKCS#10 或 SPKAC）
DViewCsr.jtfPublicKey.text              = {0} {1} bits
DViewCsr.jtfPublicKey.tooltip           = CSR 公钥算法
DViewCsr.jtfSignatureAlgorithm.tooltip  = 用于签署 CSR 的签名算法
DViewCsr.jtfUnstructuredName.tooltip    = 可选的公司名称，用于与 OpenSSL 兼容（PKCS#10 属性“unstructuredName”）
DViewCsr.Verify.title                   = 签名验证结果
DViewCsr.VerifyOK.message               = 签名有效
DViewCsr.NoVerify.message               = 签名无效

DViewDHParameters.ChooseExportFile.button     = 选择
DViewDHParameters.ExportPem.Title             = 导出 PEM
DViewDHParameters.ExportPemSuccessful.message = 导出 PEM 成功。
DViewDHParameters.OverWriteFile.message       = 文件 ''{0}'' 已存在。\n是否要覆盖它？
DViewDHParameters.jbCopy.mnemonic             = C
DViewDHParameters.jbCopy.text                 = 复制
DViewDHParameters.jbCopy.tooltip              = 复制 PEM 数据到剪切板
DViewDHParameters.jbExport.export.text        = 导出
DViewDHParameters.jbExport.export.tooltip     = 导出 PEM
DViewDHParameters.jbExport.mnemonic           = E
DViewDHParameters.jbOK.text                   = 是
DViewDHParameters.jtAreaPem.mnemonic          = t
DViewDHParameters.jtAreaPem.tooltip           = PEM 格式的 DH 参数

DViewJwt.Title              = 查看 JWT
DViewJwt.jbCopy.mnemonic    = C
DViewJwt.jbCopy.text        = 复制
DViewJwt.jbCopy.tooltip     = 复制 JWT 到剪切板
DViewJwt.jbOK.text          = 是
DViewJwt.jlEncoded.text     = 编码：
DViewJwt.jlHeader.text      = Header:
DViewJwt.jlPayload.text     = Payload:
DViewJwt.jtaEncoded.tooltip = JSON Web Token
DViewJwt.jtaHeader.tooltip  = JWT header
DViewJwt.jtaPayload.tooltip = JWT payload
DViewJwt.jlPublicKey.text   = 公钥：
DViewJwt.jtaPublicKey.tooltip = 公钥
DViewJwt.Verify.Title       = 验证签名
DViewJwt.jbVerify.text      = 验证
DViewJwt.jbVerify.tooltip   = 验证签名
DViewJwt.InvalidPublicKey.message = 无效公钥
DViewJwt.SignatureVerified.message = 签名已验证
DViewJwt.InvalidSignature.message = 无效签名

DViewKeyPair.ViewCertificateDetails.Title  = 密钥对的证书详细信息
DViewKeyPair.ViewPrivateKeyDetails.Title   = 密钥对的私钥详细信息
DViewKeyPair.jbCertificateDetails.mnemonic = C
DViewKeyPair.jbCertificateDetails.text     = 证书详细信息
DViewKeyPair.jbCertificateDetails.tooltip  = 显示密钥对的证书详细信息
DViewKeyPair.jbImport.mnemonic             = I
DViewKeyPair.jbOK.text                     = 是
DViewKeyPair.jbPrivateKeyDetails.mnemonic  = P
DViewKeyPair.jbPrivateKeyDetails.text      = 私钥详细信息
DViewKeyPair.jbPrivateKeyDetails.tooltip   = 显示密钥对的私钥详细信息

DViewPem.ChooseExportFile.Title                 = 选择 PEM 导出文件
DViewPem.ChooseExportFile.button                = 选择
DViewPem.ExportPem.Title                        = 导出 PEM
DViewPem.ExportPemCertificateSuccessful.message = 导出 PEM 成功。
DViewPem.NoWriteFile.message                    = 无法写入文件 ''{0}''。
DViewPem.OverWriteFile.message                  = 文件 ''{0}'' 已存在。\n是否要覆盖它？
DViewPem.jbCopy.mnemonic                        = C
DViewPem.jbCopy.text                            = 复制
DViewPem.jbCopy.tooltip                         = 复制 PEM 数据到剪切板
DViewPem.jbExport.mnemonic                      = E
DViewPem.jbExport.text                          = 导出
DViewPem.jbExport.tooltip                       = 将 PEM 数据 CSR 导出到文件
DViewPem.jbOK.text                              = 是

DViewPrivateKey.Pem.Title            = PKCS#8 PEM 格式的私钥
DViewPrivateKey.jbAsn1.mnemonic      = A
DViewPrivateKey.jbAsn1.text          = ASN.1
DViewPrivateKey.jbAsn1.tooltip       = 显示私钥的 ASN.1 转储
DViewPrivateKey.jbExport.mnemonic    = X
DViewPrivateKey.jbExport.text        = 导出
DViewPrivateKey.jbExport.tooltip     = 导出私钥到文件
DViewPrivateKey.jbFields.mnemonic    = F
DViewPrivateKey.jbFields.text        = 字段
DViewPrivateKey.jbFields.tooltip     = 显示私钥字段
DViewPrivateKey.jbOK.text            = 是
DViewPrivateKey.jbPem.mnemonic       = E
DViewPrivateKey.jbPem.text           = PEM
DViewPrivateKey.jbPem.tooltip        = 以 PEM 格式显示私钥
DViewPrivateKey.jlAlgorithm.text     = 算法：
DViewPrivateKey.jlEncoded.text       = 编码：
DViewPrivateKey.jlFormat.text        = 格式：
DViewPrivateKey.jlKeySize.text       = 密钥长度：
DViewPrivateKey.jtfAlgorithm.tooltip = 私钥算法
DViewPrivateKey.jtfEncoded.tooltip   = 私钥编码形式
DViewPrivateKey.jtfFormat.tooltip    = 私钥编码格式
DViewPrivateKey.jtfKeySize.text      = {0} bits
DViewPrivateKey.jtfKeySize.tooltip   = 私钥长度

DViewPublicKey.Pem.Title            = PEM 格式的公钥
DViewPublicKey.jbAsn1.mnemonic      = A
DViewPublicKey.jbAsn1.text          = ASN.1
DViewPublicKey.jbAsn1.tooltip       = 显示公钥的 ASN.1 转储
DViewPublicKey.jbFields.mnemonic    = F
DViewPublicKey.jbFields.text        = 字段
DViewPublicKey.jbFields.tooltip     = 显示公钥的字段
DViewPublicKey.jbOK.text            = OK
DViewPublicKey.jbPem.mnemonic       = E
DViewPublicKey.jbPem.text           = PEM
DViewPublicKey.jbPem.tooltip        = 以 PEM 格式显示公钥
DViewPublicKey.jlAlgorithm.text     = 算法：
DViewPublicKey.jlEncoded.text       = 编码：
DViewPublicKey.jlFormat.text        = 格式：
DViewPublicKey.jlKeySize.text       = 密钥长度：
DViewPublicKey.jtfAlgorithm.tooltip = 公钥算法
DViewPublicKey.jtfEncoded.tooltip   = 公钥编码形式
DViewPublicKey.jtfFormat.tooltip    = 公钥编码格式
DViewPublicKey.jtfKeySize.text      = {0} bits
DViewPublicKey.jtfKeySize.tooltip   = 公钥长度

DViewSecretKey.NotAValidHexString.message = 不是有效的十六进制字符串。
DViewSecretKey.NotAValidKey.message       = 不是有效密钥
DViewSecretKey.jbCancel.text              = 取消
DViewSecretKey.jbOK.text                  = 是
DViewSecretKey.jlAlgorithm.text           = 算法：
DViewSecretKey.jlEncoded.text             = 编码：
DViewSecretKey.jlFormat.text              = 格式：
DViewSecretKey.jlKeySize.text             = 密钥长度：
DViewSecretKey.jtfAlgorithm.tooltip       = 密钥算法
DViewSecretKey.jtfEncoded.tooltip         = 密钥的十六进制编码形式（可编辑）
DViewSecretKey.jtfFormat.tooltip          = 密钥编码格式
DViewSecretKey.jtfKeySize.text            = {0} bits
DViewSecretKey.jtfKeySize.tooltip         = 密钥长度

DViewSignature.Certificates.Title                 = 签名证书
DViewSignature.Issuer.Title                       = 颁发者
DViewSignature.Pem.Title                          = 签名 PEM
DViewSignature.Subject.Title                      = 持有者
DViewSignature.TimeStampSigner.Title              = ''{0}'' 的时间戳
DViewSignature.jbAsn1.mnemonic                    = A
DViewSignature.jbAsn1.text                        = ASN.1
DViewSignature.jbAsn1.tooltip                     = 显示签名的 ASN.1 转储
DViewSignature.jbCertificates.mnemonic            = C
DViewSignature.jbCertificates.text                = 证书
DViewSignature.jbCertificates.tooltip             = 显示签名的证书
DViewSignature.jbOK.text                          = 是
DViewSignature.jbPem.mnemonic                     = P
DViewSignature.jbPem.text                         = PEM
DViewSignature.jbPem.tooltip                      = 将签名显示为 PEM
DViewSignature.jbSignerAsn1.mnemonic              = S
DViewSignature.jbSignerAsn1.text                  = 签名者 ASN.1
DViewSignature.jbSignerAsn1.tooltip               = 显示签名者信息的 ASN.1 转储
DViewSignature.jbTimeStamp.mnemonic               = T
DViewSignature.jbTimeStamp.text                   = 时间戳
DViewSignature.jbTimeStamp.tooltip                = 显示签名时间戳
DViewSignature.jdnIssuer.tooltip                  = 签名者的颁发者证书专有名称
DViewSignature.jdnSubject.tooltip                 = 签名者的持有者证书专有名称
DViewSignature.jlIssuer.text                      = 颁发者：
DViewSignature.jlSigners.text                     = 签名者：
DViewSignature.jlSignatureAlgorithm.text          = 签名算法：
DViewSignature.jlSigningTime.text                 = 签名时间：
DViewSignature.jlStatus.text                      = 状态：
DViewSignature.jlSubject.text                     = 持有者：
DViewSignature.jlVersion.text                     = 版本：
DViewSignature.jtfSignatureAlgorithm.tooltip      = 用于签名证书的签名算法
DViewSignature.jtfSigningTime.tooltip             = 文件签名时间
DViewSignature.jtfStatus.tooltip                  = 签名者的签名状态
DViewSignature.jtfVersion.tooltip                 = 签名者的版本号

PasswordCallbackHandler.Title = PIN 登录

RevokedCertsTableHeadRend.RevocationDateColumn.tooltip = 吊销证书的吊销日期/时间
RevokedCertsTableHeadRend.SerialNumberColumn.tooltip   = 吊销证书的序列号

RevokedCertsTableModel.RevocationDateColumn = 吊销日期
RevokedCertsTableModel.SerialNumberColumn   = 序列号

DPkcs12Info.Title                               = ''{0}'' 的内容
DPkcs12Info.jbCopy.mnemonic                     = C
DPkcs12Info.jbCopy.text                         = 复制
DPkcs12Info.jbCopy.tooltip                      = 复制属性到剪切板
DPkcs12Info.jbOpen.text                         = 打开
DPkcs12Info.jbCancel.text                       = 取消
DPkcs12Info.content.Algorithm                   = 算法：{0}
DPkcs12Info.content.File                        = 文件：{0}
DPkcs12Info.content.Type                        = 类型：{0}
DPkcs12Info.content.Root                        = ''{0}'' 属性
DPkcs12Info.content.MAC                         = MAC
DPkcs12Info.content.Pkcs7Data                   = PKCS#7 数据
DPkcs12Info.content.Pkcs7EncrData               = PKCS#7 加密数据
DPkcs12Info.content.Pkcs7EnvelopedData          = PKCS#7 封装数据 - 不支持
DPkcs12Info.content.Pkcs7SignedData             = PKCS#7 签名数据 - 不支持   
DPkcs12Info.content.Subject                     = 持有者：{0}
DPkcs12Info.content.Issuer                      = 颁发者：{0}
DPkcs12Info.content.SerialNumber                = 序列号：{0}
DPkcs12Info.content.Validity                    = 有效期：{0} - {1}
DPkcs12Info.content.KeyDerivationFunction       = 密钥派生函数：{0}
DPkcs12Info.content.Salt                        = 盐：{0} bytes
DPkcs12Info.content.IV                          = IV: {0} bytes
DPkcs12Info.content.Iterations                  = 迭代次数：{0}
DPkcs12Info.content.Pbkdf2Salt                  = PBKDF2 盐：{0} bytes
DPkcs12Info.content.Pbkdf2Iterations            = PBKDF2 迭代次数：{0}
DPkcs12Info.content.EncryptionScheme            = 加密方案：{0}
DPkcs12Info.content.Pkcs8ShroudedKeyBag         = PKCS#8 加密密钥包
DPkcs12Info.content.KeyBag                      = 密钥包
DPkcs12Info.content.SecretBag                   = 密钥包
DPkcs12Info.content.CertificateBag              = 证书包
DPkcs12Info.content.FriendlyName                = 友好名称：{0}
DPkcs12Info.content.BagAttributes               = 包属性
DPkcs12Info.content.LocalId                     = 本地 ID：{0}
DPkcs12Info.content.UnknownOID                  = 未知 OID: {0}
DPkcs12Info.content.UnsupportedBagType          = 不支持的包类型：{0}
DPkcs12Info.content.UnsupportedCertificateType  = 不支持的证书类型：{0}
DPkcs12Info.content.DecryptionFailed            = 解密失败，可能是口令错误（错误：{0}）
DPkcs12Info.content.DecodingError               = ASN.1 解码失败，错误：{0}
