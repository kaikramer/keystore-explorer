
DExportCertificates.Certificate.Simple.Title      = 导出证书
DExportCertificates.Certificate.Title             = 导出证书 ''{0}''
DExportCertificates.CertificateSelected.Title     = 导出选中的证书 ''{0}''
DExportCertificates.CertificateChain.Simple.Title = 导出证书链
DExportCertificates.CertificateChain.Title        = 导出证书链 ''{0}''
DExportCertificates.ChooseExportFile.Title        = 选择证书导出文件
DExportCertificates.ChooseExportFile.button       = 选中
DExportCertificates.ExportFileRequired.message    = 需要导出文件的路径。
DExportCertificates.OverWriteExportFile.message   = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportCertificates.jbBrowse.mnemonic             = B
DExportCertificates.jbBrowse.text                 = 浏览
DExportCertificates.jbBrowse.tooltip              = 浏览导出文件
DExportCertificates.jbCancel.text                 = 取消
DExportCertificates.jbExport.mnemonic             = E
DExportCertificates.jbExport.text                 = 导出
DExportCertificates.jbExport.tooltip              = 导出到文件
DExportCertificates.jcbExportPem.tooltip          = PEM 编码导出？
DExportCertificates.jlExportFile.text             = 导出文件：
DExportCertificates.jlExportFormat.text           = 导出格式：
DExportCertificates.jlExportLength.text           = 导出长度：
DExportCertificates.jlExportPem.text              = PEM：
DExportCertificates.jrbExportChain.mnemonic       = C
DExportCertificates.jrbExportChain.text           = 整个链
DExportCertificates.jrbExportChain.tooltip        = 导出整个证书链
DExportCertificates.jrbExportHead.mnemonic        = H
DExportCertificates.jrbExportHead.text            = 仅限根证书
DExportCertificates.jrbExportHead.tooltip         = 仅限导出根证书
DExportCertificates.jrbExportPkcs7.mnemonic       = P
DExportCertificates.jrbExportPkcs7.text           = PKCS#7
DExportCertificates.jrbExportPkcs7.tooltip        = 以 PKCS#7 格式导出
DExportCertificates.jrbExportPkiPath.mnemonic     = K
DExportCertificates.jrbExportPkiPath.text         = PKI 路径
DExportCertificates.jrbExportPkiPath.tooltip      = 以 PKI 路径格式导出
DExportCertificates.jrbExportSpc.mnemonic         = S
DExportCertificates.jrbExportSpc.text             = SPC
DExportCertificates.jrbExportSpc.tooltip          = 以软件发行者证书 (SPC) 格式导出
DExportCertificates.jrbExportX509.mnemonic        = X
DExportCertificates.jrbExportX509.text            = X.509
DExportCertificates.jrbExportX509.tooltip         = 以 X.509 格式导出
DExportCertificates.jtfExportFile.tooltip         = 文件导出到

DExportCrl.ChooseExportFile.Title      = 选择 CRL 导出文件
DExportCrl.ChooseExportFile.button     = 选择
DExportCrl.ExportFileRequired.message  = 需要导出文件的路径。
DExportCrl.OverWriteExportFile.message = 需要导出文件的文件 ''{0}'' 已存在。\n是否要覆盖它？路径。
DExportCrl.Simple.Title                = 导出 CRL
DExportCrl.Title                       = 导出 CRL
DExportCrl.jbBrowse.mnemonic           = B
DExportCrl.jbBrowse.text               = 浏览
DExportCrl.jbBrowse.tooltip            = 浏览导出文件
DExportCrl.jbCancel.text               = 取消
DExportCrl.jbExport.mnemonic           = E
DExportCrl.jbExport.text               = 导出
DExportCrl.jbExport.tooltip            = 导出到文件
DExportCrl.jcbExportPem.tooltip        = PEM 编码导出？
DExportCrl.jlExportFile.text           = 导出文件：
DExportCrl.jlExportPem.text            = PEM:
DExportCrl.jtfExportFile.tooltip       = 导出文件到

DExportKeyPair.ChooseExportFile.Title               = 选择密钥对导出文件
DExportKeyPair.ChooseExportFile.button              = 选择
DExportKeyPair.ExportFileRequired.message           = 需要导出文件的路径。
DExportKeyPair.MinimumPasswordQualityNotMet.message = 提供的口令不符合所指定的最低强度要求。
DExportKeyPair.OverWriteExportFile.message          = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportKeyPair.PasswordsNoMatch.message             = 提供的口令不匹配。
DExportKeyPair.Simple.Title                         = 导出密钥对
DExportKeyPair.Title                                = 从密钥库条目 ''{0}'' 导出密钥对
DExportKeyPair.jbBrowse.mnemonic                    = B
DExportKeyPair.jbBrowse.text                        = 浏览
DExportKeyPair.jbBrowse.tooltip                     = 浏览导出文件
DExportKeyPair.jbCancel.text                        = 取消
DExportKeyPair.jbExport.mnemonic                    = E
DExportKeyPair.jbExport.text                        = 导出
DExportKeyPair.jbExport.tooltip                     = 导出密钥对到文件
DExportKeyPair.jlConfirmPassword.text               = 确认口令：
DExportKeyPair.jlExportFile.text                    = 导出文件：
DExportKeyPair.jlFormat.text                        = 格式：
DExportKeyPair.jlPassword.text                      = 输出文件的口令：
DExportKeyPair.jpfConfirmPassword.tooltip           = 确认保护密码
DExportKeyPair.jpqfPassword.tooltip                 = 使用密码保护导出的密钥对
DExportKeyPair.jrbFormatPEM.text                    = PEM
DExportKeyPair.jrbFormatPEM.tooltip                 = 导出私钥和证书链为单个 PEM 文件
DExportKeyPair.jrbFormatPkcs12.text                 = PKCS#12
DExportKeyPair.jrbFormatPkcs12.tooltip              = 导出私钥和证书链为 PKCS#12 文件
DExportKeyPair.jtfExportFile.tooltip                = 密钥对导出到文件

DExportPrivateKeyOpenSsl.ChooseExportFile.Title               = 选择私钥导出文件
DExportPrivateKeyOpenSsl.ChooseExportFile.button              = 选择
DExportPrivateKeyOpenSsl.ExportFileRequired.message           = 需要导出文件的路径。
DExportPrivateKeyOpenSsl.MinimumPasswordQualityNotMet.message = 提供的口令不符合所指定的最低强度要求。
DExportPrivateKeyOpenSsl.OverWriteExportFile.message          = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportPrivateKeyOpenSsl.PasswordsNoMatch.message             = 提供的口令不匹配。
DExportPrivateKeyOpenSsl.Simple.Title                         = 导出私钥为 OpenSSL 格式
DExportPrivateKeyOpenSsl.Title                                = 从 KeyStore 条目 ''{0}'' 将私钥导出为 OpenSSL 格式
DExportPrivateKeyOpenSsl.jbBrowse.mnemonic                    = B
DExportPrivateKeyOpenSsl.jbBrowse.text                        = 浏览
DExportPrivateKeyOpenSsl.jbBrowse.tooltip                     = 浏览导出文件
DExportPrivateKeyOpenSsl.jbCancel.text                        = 取消
DExportPrivateKeyOpenSsl.jbExport.mnemonic                    = E
DExportPrivateKeyOpenSsl.jbExport.text                        = 导出
DExportPrivateKeyOpenSsl.jbExport.tooltip                     = 导出私钥到文件
DExportPrivateKeyOpenSsl.jcbEncrypt.tooltip                   = 使用 PBE 加密导出的私钥？
DExportPrivateKeyOpenSsl.jcbExportPem.tooltip                 = 对导出的私钥进行 PEM 编码？  Required where export is encrypted
DExportPrivateKeyOpenSsl.jcbPbeAlg.tooltip                    = 基于口令的加密算法（Password Based Encryption, PBE）
DExportPrivateKeyOpenSsl.jlConfirmPassword.text               = 确认口令：
DExportPrivateKeyOpenSsl.jlEncrypt.text                       = 加密：
DExportPrivateKeyOpenSsl.jlExportFile.text                    = 导出文件：
DExportPrivateKeyOpenSsl.jlExportPem.text                     = PEM:
DExportPrivateKeyOpenSsl.jlPassword.text                      = 加密口令：
DExportPrivateKeyOpenSsl.jlPbeAlg.text                        = 加密算法：
DExportPrivateKeyOpenSsl.jpfConfirmPassword.tooltip           = 确认保护密码
DExportPrivateKeyOpenSsl.jpqfPassword.tooltip                 = 使用 PBE 口令保护导出的私钥
DExportPrivateKeyOpenSsl.jtfExportFile.tooltip                = 导出私钥到

DExportPrivateKeyPkcs8.ChooseExportFile.Title               = 选择私钥导出文件
DExportPrivateKeyPkcs8.ChooseExportFile.button              = 选择
DExportPrivateKeyPkcs8.ExportFileRequired.message           = 需要导出文件的路径。
DExportPrivateKeyPkcs8.MinimumPasswordQualityNotMet.message = 提供的口令不符合所指定的最低强度要求。
DExportPrivateKeyPkcs8.OverWriteExportFile.message          = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportPrivateKeyPkcs8.PasswordsNoMatch.message             = 提供的口令不匹配。
DExportPrivateKeyPkcs8.Simple.Title                         = 导出私钥为 PKCS #8
DExportPrivateKeyPkcs8.Title                                = 从密钥库条目 ''{0}'' 将私钥导出为 PKCS#8
DExportPrivateKeyPkcs8.jbBrowse.mnemonic                    = B
DExportPrivateKeyPkcs8.jbBrowse.text                        = 浏览
DExportPrivateKeyPkcs8.jbBrowse.tooltip                     = 浏览导出文件
DExportPrivateKeyPkcs8.jbCancel.text                        = 取消
DExportPrivateKeyPkcs8.jbExport.mnemonic                    = E
DExportPrivateKeyPkcs8.jbExport.text                        = 导出
DExportPrivateKeyPkcs8.jbExport.tooltip                     = 导出私钥到文件
DExportPrivateKeyPkcs8.jcbEncrypt.tooltip                   = 使用 PBE 加密导出的私钥？
DExportPrivateKeyPkcs8.jcbExportPem.tooltip                 = 对导出的私钥进行 PEM 编码？
DExportPrivateKeyPkcs8.jcbPbeAlg.tooltip                    = 基于口令的加密算法（Password Based Encryption, PBE）
DExportPrivateKeyPkcs8.jlConfirmPassword.text               = 确认口令：
DExportPrivateKeyPkcs8.jlEncrypt.text                       = 加密：
DExportPrivateKeyPkcs8.jlExportFile.text                    = 导出文件：
DExportPrivateKeyPkcs8.jlExportPem.text                     = PEM:
DExportPrivateKeyPkcs8.jlPassword.text                      = 加密口令：
DExportPrivateKeyPkcs8.jlPbeAlg.text                        = 加密算法：
DExportPrivateKeyPkcs8.jpfConfirmPassword.tooltip           = 确认保护密码
DExportPrivateKeyPkcs8.jpqfPassword.tooltip                 = 使用 PBE 口令保护导出的私钥
DExportPrivateKeyPkcs8.jtfExportFile.tooltip                = 导出私钥到

DExportPrivateKeyPvk.ChooseExportFile.Title               = 选择私钥导出文件
DExportPrivateKeyPvk.ChooseExportFile.button              = 选择
DExportPrivateKeyPvk.ExportFileRequired.message           = 需要导出文件的路径。
DExportPrivateKeyPvk.MinimumPasswordQualityNotMet.message = 提供的口令不符合所指定的最低强度要求。
DExportPrivateKeyPvk.OverWriteExportFile.message          = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportPrivateKeyPvk.PasswordsNoMatch.message             = 提供的口令不匹配。
DExportPrivateKeyPvk.Simple.Title                         = 导出私钥为 PVK 格式
DExportPrivateKeyPvk.Title                                = 从密钥库条目 ''{0}'' 将私钥导出为 PVK 格式
DExportPrivateKeyPvk.jbBrowse.mnemonic                    = B
DExportPrivateKeyPvk.jbBrowse.text                        = 浏览
DExportPrivateKeyPvk.jbBrowse.tooltip                     = 浏览导出文件
DExportPrivateKeyPvk.jbCancel.text                        = 取消
DExportPrivateKeyPvk.jbExport.mnemonic                    = E
DExportPrivateKeyPvk.jbExport.text                        = 导出
DExportPrivateKeyPvk.jbExport.tooltip                     = 导出私钥到文件
DExportPrivateKeyPvk.jcbEncrypt.tooltip                   = 对导出的私钥进行加密？
DExportPrivateKeyPvk.jlConfirmPassword.text               = 确认口令：
DExportPrivateKeyPvk.jlEncrypt.text                       = 加密：
DExportPrivateKeyPvk.jlEncryptionStrength.text            = 加密强度：
DExportPrivateKeyPvk.jlExportFile.text                    = 导出文件：
DExportPrivateKeyPvk.jlKeyType.text                       = 密钥类型：
DExportPrivateKeyPvk.jlPassword.text                      = 加密口令：
DExportPrivateKeyPvk.jpfConfirmPassword.tooltip           = 确认保护密码
DExportPrivateKeyPvk.jpqfPassword.tooltip                 = 使用口令保护导出的私钥
DExportPrivateKeyPvk.jrbExchange.mnemonic                 = x
DExportPrivateKeyPvk.jrbExchange.text                     = 交换
DExportPrivateKeyPvk.jrbExchange.tooltip                  = 标记导出的密钥用于交换
DExportPrivateKeyPvk.jrbSignature.mnemonic                = S
DExportPrivateKeyPvk.jrbSignature.text                    = 签名
DExportPrivateKeyPvk.jrbSignature.tooltip                 = 将导出的密钥标记为用于签名目的
DExportPrivateKeyPvk.jrbStrong.mnemonic                   = t
DExportPrivateKeyPvk.jrbStrong.text                       = 强加密
DExportPrivateKeyPvk.jrbStrong.tooltip                    = 使用强加密保护导出的密钥
DExportPrivateKeyPvk.jrbWeak.mnemonic                     = W
DExportPrivateKeyPvk.jrbWeak.text                         = 弱加密
DExportPrivateKeyPvk.jrbWeak.tooltip                      = 使用弱加密保护导出的密钥
DExportPrivateKeyPvk.jtfExportFile.tooltip                = 导出私钥到

DExportPrivateKeyJwk.ChooseExportFile.Title               = 选择私钥导出文件
DExportPrivateKeyJwk.ChooseExportFile.button              = 选择
DExportPrivateKeyJwk.ExportFileRequired.message           = 需要导出文件的路径。
DExportPrivateKeyJwk.OverWriteExportFile.message          = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportPrivateKeyJwk.Simple.Title                         = 导出私钥为 JWK 格式
DExportPrivateKeyJwk.Title                                = 从 KeyStore 条目 ''{0}'' 将私钥导出为 JWK 格式
DExportPrivateKeyJwk.jbBrowse.mnemonic                    = B
DExportPrivateKeyJwk.jbBrowse.text                        = 浏览
DExportPrivateKeyJwk.jbBrowse.tooltip                     = 浏览导出文件
DExportPrivateKeyJwk.jbCancel.text                        = 取消
DExportPrivateKeyJwk.jbExport.mnemonic                    = E
DExportPrivateKeyJwk.jbExport.text                        = 导出
DExportPrivateKeyJwk.jbExport.tooltip                     = 导出私钥到文件
DExportPrivateKeyJwk.jlExportFile.text                    = 导出文件：
DExportPrivateKeyJwk.jtfExportFile.tooltip                = 导出私钥到

DExportPrivateKeyType.Title               = 导出私钥类型
DExportPrivateKeyType.jbCancel.text       = 取消
DExportPrivateKeyType.jbOK.text           = 是
DExportPrivateKeyType.jlExportType.text   = 选择所需的私钥导出类型：
DExportPrivateKeyType.jrbOpenSsl.mnemonic = O
DExportPrivateKeyType.jrbOpenSsl.text     = OpenSSL
DExportPrivateKeyType.jrbOpenSsl.tooltip  = 导出私钥为 OpenSSL 格式
DExportPrivateKeyType.jrbPkcs8.mnemonic   = P
DExportPrivateKeyType.jrbPkcs8.text       = PKCS#8
DExportPrivateKeyType.jrbPkcs8.tooltip    = 导出私钥为 PKCS#8 格式
DExportPrivateKeyType.jrbPvk.mnemonic     = V
DExportPrivateKeyType.jrbPvk.text         = PVK
DExportPrivateKeyType.jrbPvk.tooltip      = 导出私钥为 Microsoft PVK 格式
DExportPrivateKeyType.jrbJwk.text         = JWK
DExportPrivateKeyType.jrbJwk.tooltip      = 导出私钥为 JWK 格式
DExportPrivateKeyType.jrbJwk.mnemonic     = J


DExportPublicKey.ChooseExportFile.Title      = 选择公钥导出文件
DExportPublicKey.ChooseExportFile.button     = 选择
DExportPublicKey.ExportFileRequired.message  = 需要导出文件的路径。
DExportPublicKey.OverWriteExportFile.message = 导出文件 ''{0}'' 已存在。\n是否要覆盖它？
DExportPublicKey.Simple.Title                = 导出公钥
DExportPublicKey.Title                       = 从 KeyStore 条目 ''{0}'' 导出公钥
DExportPublicKey.jbBrowse.mnemonic           = B
DExportPublicKey.jbBrowse.text               = 浏览
DExportPublicKey.jbBrowse.tooltip            = 浏览导出文件
DExportPublicKey.jbCancel.text               = 取消
DExportPublicKey.jbExport.mnemonic           = E
DExportPublicKey.jbExport.text               = 导出
DExportPublicKey.jbExport.tooltip            = 导出公钥到文件
DExportPublicKey.jlExportFile.text           = 导出文件：
DExportPublicKey.jtfExportFile.tooltip       = 导出公钥文件到
DExportPublicKey.jrbExportOpenSsl.text       = OpenSSL
DExportPublicKey.jrbExportOpenSsl.tooltip    = 以二进制格式导出 OpenSSL 公钥？
DExportPublicKey.jrbExportOpenSslPem.text    = OpenSSL, PEM 编码
DExportPublicKey.jrbExportOpenSslPem.tooltip = 对导出的公钥进行 PEM 编码？
DExportPublicKey.jrbExportJwk.text           = JWK
DExportPublicKey.jrbExportJwk.tooltip        = 导出公钥为 JWK？


DImportKeyPairOpenSsl.CertificateFileChooser.button     = 选择
DImportKeyPairOpenSsl.CertificateRequired.message       = 需要证书文件的路径。
DImportKeyPairOpenSsl.ChooseCertificate.Title           = 选择证书
DImportKeyPairOpenSsl.ChoosePrivateKey.Title            = 选择 OpenSSL 私钥
DImportKeyPairOpenSsl.CorruptedCerts.Cause              = 证书文件已损坏。
DImportKeyPairOpenSsl.CorruptedOpenSsl.Cause            = OpenSSL 私钥文件已损坏。
DImportKeyPairOpenSsl.KeyPairInvalid.message            = 私钥和证书链不构成有效的密钥对。
DImportKeyPairOpenSsl.NoCertsFound.message              = 在文件 ''{0}'' 中未找到证书。
DImportKeyPairOpenSsl.NoLoadCerts.Problem               = 无法加载证书文件 ''{0}''。
DImportKeyPairOpenSsl.NoLoadEncryptedOpenSsl.Problem    = 无法加载加密的 OpenSSL 私钥文件 ''{0}''。
DImportKeyPairOpenSsl.NoLoadUnencryptedOpenSsl.Problem  = 无法加载未加密的 OpenSSL 私钥文件 ''{0}''。
DImportKeyPairOpenSsl.NoReadFile.message                = 无法读取文件 ''{0}''。
DImportKeyPairOpenSsl.NotCerts.Cause                    = 该文件不是受支持的格式：X.509、PKCS#7、PKI Path 或 SPC。
DImportKeyPairOpenSsl.NotOpenSsl.Cause                  = 该文件不是 OpenSSL 格式。
DImportKeyPairOpenSsl.PasswordIncorrectOpenSsl.Cause    = 提供的解密口令不正确。
DImportKeyPairOpenSsl.PrivateKeyEncrypted.message       = OpenSSL 私钥文件 ''{0}'' 已加密。
DImportKeyPairOpenSsl.PrivateKeyFileChooser.button      = 选择
DImportKeyPairOpenSsl.PrivateKeyNotEncrypted.message    = OpenSSL 私钥文件 ''{0}'' 未加密。
DImportKeyPairOpenSsl.PrivateKeyPbeNotSupported.message = OpenSSL 私钥文件受到不受支持的加密算法保护：''{0}''.
DImportKeyPairOpenSsl.PrivateKeyRequired.message        = 需要私钥文件的路径。
DImportKeyPairOpenSsl.ProblemLoadingCerts.Title         = 加载证书时出现问题
DImportKeyPairOpenSsl.ProblemLoadingOpenSsl.Title       = 加载 OpenSSL 私钥时出现问题
DImportKeyPairOpenSsl.Title                             = 导入 OpenSSL 密钥对
DImportKeyPairOpenSsl.ViewCertificateDetails.Title      = 文件的证书详细信息 ''{0}''
DImportKeyPairOpenSsl.ViewPrivateKeyDetails.Title       = 文件的私钥详细信息 ''{0}''
DImportKeyPairOpenSsl.jbCancel.text                     = 取消
DImportKeyPairOpenSsl.jbCertificateBrowse.mnemonic      = R
DImportKeyPairOpenSsl.jbCertificateBrowse.text          = 浏览
DImportKeyPairOpenSsl.jbCertificateBrowse.tooltip       = 浏览证书文件
DImportKeyPairOpenSsl.jbCertificateDetails.mnemonic     = E
DImportKeyPairOpenSsl.jbCertificateDetails.text         = 详细信息
DImportKeyPairOpenSsl.jbCertificateDetails.tooltip      = 显示证书详细信息
DImportKeyPairOpenSsl.jbImport.mnemonic                 = I
DImportKeyPairOpenSsl.jbImport.text                     = 导入
DImportKeyPairOpenSsl.jbImport.tooltip                  = 导入选中的密钥对
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.mnemonic       = B
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.text           = 浏览
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.tooltip        = 浏览到 OpenSSL 私钥文件
DImportKeyPairOpenSsl.jbPrivateKeyDetails.mnemonic      = D
DImportKeyPairOpenSsl.jbPrivateKeyDetails.text          = 详细信息
DImportKeyPairOpenSsl.jbPrivateKeyDetails.tooltip       = 显示私钥详细信息
DImportKeyPairOpenSsl.jcbEncrypted.tooltip              = OpenSSL 私钥文件是否加密？
DImportKeyPairOpenSsl.jlCertificate.text                = 证书文件：
DImportKeyPairOpenSsl.jlEncrypted.text                  = 加密私钥：
DImportKeyPairOpenSsl.jlPassword.text                   = 解密口令：
DImportKeyPairOpenSsl.jlPrivateKey.text                 = OpenSSL 私钥文件：
DImportKeyPairOpenSsl.jpfPassword.tooltip               = 用于解密OpenSSL私钥文件的口令
DImportKeyPairOpenSsl.jtfCertificatePath.tooltip        = 证书文件路径
DImportKeyPairOpenSsl.jtfPrivateKeyPath.tooltip         = OpenSSL 私钥文件的路径

DImportKeyPairPkcs12.ChooseKeyPair.Title           = 选择 PKCS#12 密钥对
DImportKeyPairPkcs12.CorruptedPkcs12.Cause         = PKCS #12 文件已损坏。
DImportKeyPairPkcs12.KeyPairFileChooser.button     = 选择
DImportKeyPairPkcs12.KeyPairInvalid.message        = 私钥和证书链不构成有效的密钥对。
DImportKeyPairPkcs12.KeyPairRequired.message       = 需要 PKCS#12 密钥对文件的路径。
DImportKeyPairPkcs12.NoKeyPairPkcs12File.message   = 在文件 ''{0}' '中未找到任何密钥对。
DImportKeyPairPkcs12.NoLoadPkcs12.Problem          = 无法加载 PKCS #12 文件 ''{0}''。
DImportKeyPairPkcs12.NoReadFile.message            = 无法读取文件 ''{0}''。
DImportKeyPairPkcs12.NotPkcs12.Cause               = 该文件不是 PKCS #12 格式。
DImportKeyPairPkcs12.PasswordIncorrectPkcs12.Cause = 提供的解密口令不正确。
DImportKeyPairPkcs12.ProblemLoadingPkcs12.Title    = P加载 PKCS#12 时出现问题
DImportKeyPairPkcs12.Title                         = 导入 PKCS#12 密钥对
DImportKeyPairPkcs12.ViewKeyPairDetails.Title      = 文件 ''{0}'' 的密钥对详细信息
DImportKeyPairPkcs12.jbBrowse.mnemonic             = B
DImportKeyPairPkcs12.jbBrowse.text                 = 浏览
DImportKeyPairPkcs12.jbBrowse.tooltip              = 浏览 PKCS#12 密钥对文件
DImportKeyPairPkcs12.jbCancel.text                 = 取消
DImportKeyPairPkcs12.jbDetails.mnemonic            = D
DImportKeyPairPkcs12.jbDetails.text                = 纤细信息
DImportKeyPairPkcs12.jbDetails.tooltip             = 显示密钥对的详细信息
DImportKeyPairPkcs12.jbImport.mnemonic             = I
DImportKeyPairPkcs12.jbImport.text                 = 导入
DImportKeyPairPkcs12.jbImport.tooltip              = 导入选中的密钥对
DImportKeyPairPkcs12.jlPassword.text               = 解密口令：
DImportKeyPairPkcs12.jlPkcs12Path.text             = PKCS#12 密钥对文件:
DImportKeyPairPkcs12.jpfPassword.tooltip           = 用于解密 PKCS#12 密钥对文件的口令
DImportKeyPairPkcs12.jtfPkcs12Path.tooltip         = PKCS#12 密钥对文件的路径

DImportKeyPairPkcs8.CertificateFileChooser.button     = 选择
DImportKeyPairPkcs8.CertificateRequired.message       = 需要证书文件的路径。
DImportKeyPairPkcs8.ChooseCertificate.Title           = 选择证书
DImportKeyPairPkcs8.ChoosePrivateKey.Title            = 选择 PKCS#8 私钥
DImportKeyPairPkcs8.CorruptedCerts.Cause              = 证书文件已损坏。
DImportKeyPairPkcs8.CorruptedPkcs8.Cause              = PKCS#8 私钥文件已损坏。
DImportKeyPairPkcs8.KeyPairInvalid.message            = 私钥和证书链不构成有效的密钥对。
DImportKeyPairPkcs8.NoCertsFound.message              = 在文件 ''{0}'' 中未找到证书。
DImportKeyPairPkcs8.NoLoadCerts.Problem               = 无法加载证书文件 ''{0}''。
DImportKeyPairPkcs8.NoLoadEncryptedPkcs8.Problem      = 无法加载加密的 PKCS#8 私钥文件 ''{0}''。
DImportKeyPairPkcs8.NoLoadUnencryptedPkcs8.Problem    = 无法加载未加密的 PKCS#8 私钥文件 ''{0}''。
DImportKeyPairPkcs8.NoReadFile.message                = 无法读取文件 ''{0}''。
DImportKeyPairPkcs8.NotCerts.Cause                    = 该文件不是受支持的格式：X.509、PKCS#7、PKI Path 或 SPC。
DImportKeyPairPkcs8.NotPkcs8.Cause                    = 该文件不是 PKCS#8 格式。
DImportKeyPairPkcs8.PasswordIncorrectPkcs8.Cause      = 提供的解密口令不正确。
DImportKeyPairPkcs8.PrivateKeyEncrypted.message       = PKCS#8 私钥文件 ''{0}'' 已加密。
DImportKeyPairPkcs8.PrivateKeyFileChooser.button      = 选择
DImportKeyPairPkcs8.PrivateKeyNotEncrypted.message    = PKCS#8 私钥文件 ''{0}'' 未加密。
DImportKeyPairPkcs8.PrivateKeyPbeNotSupported.message = PKCS#8 私钥文件受不受支持的加密算法保护：''{0}''。
DImportKeyPairPkcs8.PrivateKeyRequired.message        = 需要私钥文件的路径。
DImportKeyPairPkcs8.ProblemLoadingCerts.Title         = 加载证书时出现问题
DImportKeyPairPkcs8.ProblemLoadingPkcs8.Title         = 加载 PKCS#8 私钥时出现问题
DImportKeyPairPkcs8.Title                             = 导入 PKCS#8 密钥对
DImportKeyPairPkcs8.ViewCertificateDetails.Title      = 文件的证书详细信息 ''{0}''
DImportKeyPairPkcs8.ViewPrivateKeyDetails.Title       = 文件的私钥详细信息 ''{0}''
DImportKeyPairPkcs8.jbCancel.text                     = 取消
DImportKeyPairPkcs8.jbCertificateBrowse.mnemonic      = R
DImportKeyPairPkcs8.jbCertificateBrowse.text          = 浏览
DImportKeyPairPkcs8.jbCertificateBrowse.tooltip       = 浏览证书文件
DImportKeyPairPkcs8.jbCertificateDetails.mnemonic     = E
DImportKeyPairPkcs8.jbCertificateDetails.text         = 详细信息
DImportKeyPairPkcs8.jbCertificateDetails.tooltip      = 显示证书详细信息
DImportKeyPairPkcs8.jbImport.mnemonic                 = I
DImportKeyPairPkcs8.jbImport.text                     = 导入
DImportKeyPairPkcs8.jbImport.tooltip                  = 导入选中的密钥对
DImportKeyPairPkcs8.jbPrivateKeyBrowse.mnemonic       = B
DImportKeyPairPkcs8.jbPrivateKeyBrowse.text           = 浏览
DImportKeyPairPkcs8.jbPrivateKeyBrowse.tooltip        = 浏览 PKCS#8 私钥文件
DImportKeyPairPkcs8.jbPrivateKeyDetails.mnemonic      = D
DImportKeyPairPkcs8.jbPrivateKeyDetails.text          = 详细信息
DImportKeyPairPkcs8.jbPrivateKeyDetails.tooltip       = 显示私钥详细信息
DImportKeyPairPkcs8.jcbEncrypted.tooltip              = PKCS#8 私钥文件是否加密？
DImportKeyPairPkcs8.jlCertificate.text                = 证书文件：
DImportKeyPairPkcs8.jlEncrypted.text                  = 加密私钥：
DImportKeyPairPkcs8.jlPassword.text                   = 解密口令：
DImportKeyPairPkcs8.jlPrivateKey.text                 = PKCS#8 私钥文件：
DImportKeyPairPkcs8.jpfPassword.tooltip               = 用于解密 PKCS#8 私钥文件的口令
DImportKeyPairPkcs8.jtfCertificatePath.tooltip        = 证书文件路径
DImportKeyPairPkcs8.jtfPrivateKeyPath.tooltip         = PKCS#8 私钥文件的路径

DImportKeyPairPvk.CertificateFileChooser.button  = 选择
DImportKeyPairPvk.CertificateRequired.message    = 需要证书文件的路径。
DImportKeyPairPvk.ChooseCertificate.Title        = 选择证书
DImportKeyPairPvk.ChoosePrivateKey.Title         = 选择 PVK 私钥
DImportKeyPairPvk.CorruptedCerts.Cause           = 证书文件已损坏。
DImportKeyPairPvk.CorruptedPvk.Cause             = PVK 文件已损坏。
DImportKeyPairPvk.KeyPairInvalid.message         = 私钥和证书链不构成有效的密钥对。
DImportKeyPairPvk.NoCertsFound.message           = 在文件 ''{0}'' 中未找到证书。
DImportKeyPairPvk.NoLoadCerts.Problem            = 无法加载证书文件 ''{0}''。
DImportKeyPairPvk.NoLoadEncryptedPvk.Problem     = 无法加载加密的 PVK 私钥文件 ''{0}''.
DImportKeyPairPvk.NoLoadUnencryptedPvk.Problem   = 无法加载未加密的 PVK 私钥文件 ''{0}''.
DImportKeyPairPvk.NoReadFile.message             = 无法读取文件 ''{0}''。
DImportKeyPairPvk.NotCerts.Cause                 = 该文件不是受支持的格式：X.509、PKCS#7、PKI Path 或 SPC。
DImportKeyPairPvk.NotPvk.Cause                   = 该文件不是 PVK 格式。
DImportKeyPairPvk.PasswordIncorrectPvk.Cause     = 提供的解密口令不正确。
DImportKeyPairPvk.PrivateKeyEncrypted.message    = PVK 文件 ''{0}'' 已加密。
DImportKeyPairPvk.PrivateKeyFileChooser.button   = 选择
DImportKeyPairPvk.PrivateKeyNotEncrypted.message = PVK 文件 ''{0}'' 未加密。
DImportKeyPairPvk.PrivateKeyRequired.message     = 需要私钥文件的路径。
DImportKeyPairPvk.ProblemLoadingCerts.Title      = 加载证书时出现问题
DImportKeyPairPvk.ProblemLoadingPvk.Title        = 加载 PVK 私钥时出现问题
DImportKeyPairPvk.Title                          = 导入 PVK 密钥对
DImportKeyPairPvk.ViewCertificateDetails.Title   = 文件的证书详细信息 ''{0}''
DImportKeyPairPvk.ViewPrivateKeyDetails.Title    = 文件的私钥详细信息 ''{0}''
DImportKeyPairPvk.jbCancel.text                  = 取消
DImportKeyPairPvk.jbCertificateBrowse.mnemonic   = R
DImportKeyPairPvk.jbCertificateBrowse.text       = 浏览
DImportKeyPairPvk.jbCertificateBrowse.tooltip    = 浏览证书文件
DImportKeyPairPvk.jbCertificateDetails.mnemonic  = E
DImportKeyPairPvk.jbCertificateDetails.text      = 详细信息
DImportKeyPairPvk.jbCertificateDetails.tooltip   = 显示证书详细信息
DImportKeyPairPvk.jbImport.mnemonic              = I
DImportKeyPairPvk.jbImport.text                  = 导入
DImportKeyPairPvk.jbImport.tooltip               = 导入选中的密钥对
DImportKeyPairPvk.jbPrivateKeyBrowse.mnemonic    = B
DImportKeyPairPvk.jbPrivateKeyBrowse.text        = 浏览
DImportKeyPairPvk.jbPrivateKeyBrowse.tooltip     = 浏览 PVK 私钥文件
DImportKeyPairPvk.jbPrivateKeyDetails.mnemonic   = D
DImportKeyPairPvk.jbPrivateKeyDetails.text       = 详细信息
DImportKeyPairPvk.jbPrivateKeyDetails.tooltip    = 显示私钥详细信息
DImportKeyPairPvk.jcbEncrypted.tooltip           = PVK 私钥文件是否加密？
DImportKeyPairPvk.jlCertificate.text             = 证书文件：
DImportKeyPairPvk.jlEncrypted.text               = 加密私钥：
DImportKeyPairPvk.jlPassword.text                = 解密口令：
DImportKeyPairPvk.jlPrivateKey.text              = PVK 私钥文件：
DImportKeyPairPvk.jpfPassword.tooltip            = 解密 PVK 私钥文件的口令
DImportKeyPairPvk.jtfCertificatePath.tooltip     = 证书文件路径
DImportKeyPairPvk.jtfPrivateKeyPath.tooltip      = PVK 私钥文件路径

DImportKeyPairType.Title               = 导入密钥对类型
DImportKeyPairType.jbCancel.text       = 取消
DImportKeyPairType.jbOK.text           = 是
DImportKeyPairType.jlImportType.text   = 选择所需导入的密钥对类型：
DImportKeyPairType.jrbOpenSsl.mnemonic = O
DImportKeyPairType.jrbOpenSsl.text     = OpenSSL
DImportKeyPairType.jrbOpenSsl.tooltip  = 从 OpenSSL 私钥文件和证书文件组合导入
DImportKeyPairType.jrbPkcs12.mnemonic  = P
DImportKeyPairType.jrbPkcs12.text      = PKCS#12
DImportKeyPairType.jrbPkcs12.tooltip   = 从 PKCS#12 密钥库文件导入
DImportKeyPairType.jrbPkcs8.mnemonic   = K
DImportKeyPairType.jrbPkcs8.text       = PKCS#8
DImportKeyPairType.jrbPkcs8.tooltip    = 从 PKCS#8 私钥文件和证书文件组合导入
DImportKeyPairType.jrbPvk.mnemonic     = V
DImportKeyPairType.jrbPvk.text         = PVK
DImportKeyPairType.jrbPvk.tooltip      = 从 Microsoft PVK 私钥文件和证书文件组合导入
