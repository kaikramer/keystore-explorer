
DCheckUpdate.NoCheckUpdate.Problem        = Could not check for update.
DCheckUpdate.NoFindRedirect.message       = Could not find redirection from\n{0}.
DCheckUpdate.Non200Response.message       = Non-200 response received from server ({0}) when retrieving\n{1}.
DCheckUpdate.ProblemCheckingUpdate.Title  = Problem Checking for Update
DCheckUpdate.ProxySettingsIncorrect.Cause = Internet proxy settings are incorrect.  Check in Preferences.
DCheckUpdate.Title                        = Check for Update
DCheckUpdate.UpdateHostUnavailable.Cause  = The update host is currently unavailable.
DCheckUpdate.jbCancel.text                = Cancel
DCheckUpdate.jlCheckUpdate.text           = Checking for Update...

DCompareCertificates.KeyUsage     = Key Usage: {0}
DCompareCertificates.Title        = Compare Certificates ''{0}'' vs ''{1}''
DCompareCertificates.jbOK.text    = Ok
DCompareCertificates.jlMatch.text = Matching: {0}%

DExamineSsl.NoKeyStoreSelected.message        = No KeyStore selected.
DExamineSsl.NoPasswordSetForKeyStore.message  = Cannot use KeyStore if no password is set for it.
DExamineSsl.PositiveIntegerSslPortReq.message = TLS port must be a positive integer.
DExamineSsl.SslHostReq.message                = TLS Host required.
DExamineSsl.SslPortReq.message                = TLS Port required.
DExamineSsl.Title                             = Examine TLS
DExamineSsl.jbCancel.text                     = Cancel
DExamineSsl.jbLoadKeystore.tooltip            = Open an existing KeyStore from disk
DExamineSsl.jbOK.text                         = OK
DExamineSsl.jcbKeyStore.tooltip               = Select the KeyStore that is being used for TLS client authentication
DExamineSsl.jlClientAuth.text                 = Client Authentication
DExamineSsl.jlConnSettings.text               = Connection Settings
DExamineSsl.jlEnableClientAuth.text           = Enable Client Authentication
DExamineSsl.jlKeyStore.text                   = KeyStore:
DExamineSsl.jlSslHost.text                    = TLS Host:
DExamineSsl.jlSslPort.text                    = TLS Port:
DExamineSsl.jtfSslHost.tooltip                = Host name of TLS connection to examine
DExamineSsl.jtfSslPort.text                   = 443
DExamineSsl.jtfSslPort.tooltip                = Port number of TLS connection examine

DExaminingSsl.NoExamineSsl.Problem         = Could not examine TLS certificates for ''{0}:{1}''.
DExaminingSsl.ProblemExaminingSsl.Title    = Problem Examining TLS
DExaminingSsl.ProxySettingsIncorrect.Cause = Internet proxy settings are incorrect.  Check in Preferences.
DExaminingSsl.SslHostPortIncorrect.Cause   = The TLS host or port is incorrect.
DExaminingSsl.SslHostUnavailable.Cause     = The TLS host is currently unavailable.
DExaminingSsl.Title                        = Examining TLS
DExaminingSsl.jbCancel.text                = Cancel
DExaminingSsl.jlExaminingSsl.text          = Examining TLS...

DFindKeyStoreEntry.NotEmpty.message = Enter a valid entry name
DFindKeyStoreEntry.Title            = Find keystore entry
DFindKeyStoreEntry.jbCancel.text    = Cancel
DFindKeyStoreEntry.jbOK.text        = Ok
DFindKeyStoreEntry.jlEntryName.text = Entry Name:

DGenerateCsr.ChallengeRequiredForSpkac.message = Challenge is required for SPKAC.
DGenerateCsr.ChooseCsrFile.Title               = Choose CSR File
DGenerateCsr.ChooseCsrFile.button              = Choose
DGenerateCsr.CsrFileRequired.message           = Path to CSR File required.
DGenerateCsr.InvalidDN.message                 = Invalid name (DN)
DGenerateCsr.OverWriteCsrFile.message          = The CSR File ''{0}'' already exists.\nDo you want to overwrite it?
DGenerateCsr.Title                             = Generate CSR
DGenerateCsr.jbBrowse.mnemonic                 = B
DGenerateCsr.jbBrowse.text                     = Browse
DGenerateCsr.jbBrowse.tooltip                  = Browse to CSR File
DGenerateCsr.jbCancel.text                     = Cancel
DGenerateCsr.jbOK.text                         = OK
DGenerateCsr.jcbExtensions.text                = Add certificate extensions to request
DGenerateCsr.jcbExtensions.tooltip             = Add extensions from current certificate as extensionRequest attribute to PKCS#10 request
DGenerateCsr.jcbSignatureAlgorithm.tooltip     = Signature algorithm used to sign CSR
DGenerateCsr.jdnName.title                     = Distinguished Name (DN)
DGenerateCsr.jdnName.tooltip                   = Certificate name (DN)
DGenerateCsr.jlChallenge.text                  = Challenge:
DGenerateCsr.jlCsrFile.text                    = CSR File:
DGenerateCsr.jlExtensions.text                 = Extensions:
DGenerateCsr.jlFormat.text                     = Format:
DGenerateCsr.jlName.text                       = Distinguished Name (DN)
DGenerateCsr.jlSignatureAlgorithm.text         = Signature Algorithm:
DGenerateCsr.jlUnstructuredName.text           = Optional Company Name:
DGenerateCsr.jrbPkcs10.mnemonic                = P
DGenerateCsr.jrbPkcs10.text                    = PKCS #10
DGenerateCsr.jrbPkcs10.tooltip                 = The most commonly used format, RSA's CSR format
DGenerateCsr.jrbSpkac.mnemonic                 = S
DGenerateCsr.jrbSpkac.text                     = SPKAC
DGenerateCsr.jrbSpkac.tooltip                  = Signed Public Key and Challenge (SPKAC), Netscape's CSR format
DGenerateCsr.jtfChallenge.tooltip              = <html>Challenge passphrase to request certificate revocation later.<br>Optional for PKCS #10, mandatory for SPKAC</html>
DGenerateCsr.jtfCsrFile.tooltip                = File to generate CSR in
DGenerateCsr.jtfUnstructuredName.tooltip       = Optional Company Name for compatibility with OpenSSL (PKCS#10 attribute "unstructuredName")

DGenerateDHParameters.Title                = Generate Diffie-Hellman Parameters
DGenerateDHParameters.jbCancel.text        = Cancel
DGenerateDHParameters.jbOK.text            = OK
DGenerateDHParameters.jcbDHKeySize.tooltip = Set the Key size in bits
DGenerateDHParameters.jlDHKeySize.text     = Key Size:
DGenerateDHParameters.jpContent.text       = Key Size Selection
DGenerateDHParameters.jtAreaFooter.text    = Use OpenSSL for key sizes larger than 2048 bits. Example: \nopenssl dhparam -out dhparam.pem 2048

DGenerateKeyPair.Title                              = Generate Key Pair
DGenerateKeyPair.jbCancel.text                      = Cancel
DGenerateKeyPair.jbOK.text                          = OK
DGenerateKeyPair.jcbECCurve.tooltip                 = A named curve (standardized domain parameters defining an elliptic curve)
DGenerateKeyPair.jcbECCurveSet.tooltip              = Set of named curves defined in standard documents
DGenerateKeyPair.jlECCurve.text                     = Named Curve:
DGenerateKeyPair.jlECCurve.tooltip                  = A named curve (standardized domain parameters defining an elliptic curve)
DGenerateKeyPair.jlECCurveSet.text                  = Set:
DGenerateKeyPair.jlECCurveSet.tooltip               = Set of named curves defined in standard documents
DGenerateKeyPair.jlKeySize.text                     = Key Size:
DGenerateKeyPair.jpContent.text                     = Algorithm Selection
DGenerateKeyPair.jrbDSA.mnemonic                    = D
DGenerateKeyPair.jrbDSA.text                        = DSA
DGenerateKeyPair.jrbDSA.tooltip                     = DSA (Digital Signature Algorithm) key pair
DGenerateKeyPair.jrbEC.mnemonic                     = E
DGenerateKeyPair.jrbEC.na.tooltip                   = EC is only available in Java 7 or higher or in key store types BKS, UBER or PKCS12
DGenerateKeyPair.jrbEC.text                         = EC
DGenerateKeyPair.jrbEC.tooltip                      = ECC (Elliptic Curve Cryptography) key pair
DGenerateKeyPair.jrbRSA.mnemonic                    = R
DGenerateKeyPair.jrbRSA.text                        = RSA
DGenerateKeyPair.jrbRSA.tooltip                     = RSA (Rivest, Shamir, Adleman) key pair
DGenerateKeyPair.jsKeySize.tooltip                  = Key size in bits

DGenerateKeyPairCert.CritSANReq.message             = If the subject DN is empty, the certificate must include a subjectAltName extension that is marked as critical.
DGenerateKeyPairCert.NameValueReq.message           = A value is required for Name.
DGenerateKeyPairCert.SerialNumberNonZero.message    = Serial Number must be greater than zero.
DGenerateKeyPairCert.SerialNumberNotInteger.message = Serial Number must be an integer.
DGenerateKeyPairCert.ValReqSerialNumber.message     = A value is required for Serial Number.
DGenerateKeyPairCert.jbAddExtensions.mnemonic       = A
DGenerateKeyPairCert.jbAddExtensions.text           = Add Extensions
DGenerateKeyPairCert.jbAddExtensions.tooltip        = Add certificate extensions to certificate
DGenerateKeyPairCert.jbCancel.text                  = Cancel
DGenerateKeyPairCert.jbOK.text                      = OK
DGenerateKeyPairCert.jbTransferNameExt.mnemonic     = T
DGenerateKeyPairCert.jbTransferNameExt.text         = Transfer Name and Extensions
DGenerateKeyPairCert.jbTransferNameExt.tooltip      = Transfer name and extensions from certificate
DGenerateKeyPairCert.jcbSignatureAlgorithm.tooltip  = Signature algorithm to sign certificate with
DGenerateKeyPairCert.jdnName.title                  = Name
DGenerateKeyPairCert.jdnName.tooltip                = Certificate name (DN)
DGenerateKeyPairCert.jdtValidityEnd.text            = Validity End
DGenerateKeyPairCert.jdtValidityEnd.tooltip         = Certificate validity end
DGenerateKeyPairCert.jdtValidityStart.text          = Validity Start
DGenerateKeyPairCert.jdtValidityStart.tooltip       = Certificate validity start
DGenerateKeyPairCert.jlName.text                    = Name:
DGenerateKeyPairCert.jlSerialNumber.text            = Serial Number:
DGenerateKeyPairCert.jlSigAlg.text                  = Signature Algorithm:
DGenerateKeyPairCert.jlValidityEnd.text             = Validity End:
DGenerateKeyPairCert.jlValidityPeriod.text          = Validity Period:
DGenerateKeyPairCert.jlValidityStart.text           = Validity Start:
DGenerateKeyPairCert.jlVersion.text                 = Version:
DGenerateKeyPairCert.jrbVersion1.text               = Version 1
DGenerateKeyPairCert.jrbVersion1.tooltip            = Version 1 certificate - extensions are not supported
DGenerateKeyPairCert.jrbVersion3.text               = Version 3
DGenerateKeyPairCert.jrbVersion3.tooltip            = Version 3 certificate - extensions are supported
DGenerateKeyPairCert.jtfSerialNumber.tooltip        = Certificate serial number
DGenerateKeyPairCert.jvpValidityPeriod.tooltip      = Certificate validity period

DGenerateSecretKey.Title             = Generate Secret Key
DGenerateSecretKey.jbCancel.text     = Cancel
DGenerateSecretKey.jbOK.text         = OK
DGenerateSecretKey.jcbKeyAlg.tooltip = Secret Key algorithm
DGenerateSecretKey.jlKeyAlg.text     = Algorithm:
DGenerateSecretKey.jlKeySize.text    = Key Size:
DGenerateSecretKey.jsKeySize.tooltip = Key size in bits

DGeneratingDHParameters.Title                  = Generating DH Parameters
DGeneratingDHParameters.jbCancel.text          = Cancel
DGeneratingDHParameters.jlGenDHParameters.text = Generating DH Parameters...

DGeneratingKeyPair.Title             = Generating Key Pair
DGeneratingKeyPair.jbCancel.text     = Cancel
DGeneratingKeyPair.jlGenKeyPair.text = Generating Key Pair...

DGetAlias.AliasReq.message = Alias must be supplied.
DGetAlias.jbCancel.text    = Cancel
DGetAlias.jbOK.text        = OK
DGetAlias.jlAlias.text     = Enter Alias:

DNewKeyStoreType.Title                      = New KeyStore Type
DNewKeyStoreType.jbCancel.text              = Cancel
DNewKeyStoreType.jbOK.text                  = OK
DNewKeyStoreType.jlKeyStoreType.text        = Select the type of the new KeyStore:
DNewKeyStoreType.jrbBcfksKeyStore.mnemonic  = F
DNewKeyStoreType.jrbBcfksKeyStore.text      = BCFKS
DNewKeyStoreType.jrbBcfksKeyStore.tooltip   = Bouncy Castle FIPS KeyStore
DNewKeyStoreType.jrbBksKeyStore.mnemonic    = B
DNewKeyStoreType.jrbBksKeyStore.text        = BKS
DNewKeyStoreType.jrbBksKeyStore.tooltip     = Bouncy Castle KeyStore (Bouncy Castle's version of JKS)
DNewKeyStoreType.jrbBksV1KeyStore.mnemonic  = V
DNewKeyStoreType.jrbBksV1KeyStore.text      = BKS-V1
DNewKeyStoreType.jrbBksV1KeyStore.tooltip   = Bouncy Castle KeyStore (Bouncy Castle's version of JKS) Version 1
DNewKeyStoreType.jrbJceksKeyStore.mnemonic  = J
DNewKeyStoreType.jrbJceksKeyStore.text      = JCEKS
DNewKeyStoreType.jrbJceksKeyStore.tooltip   = Java Cryptography Extension KeyStore (Oracle's advanced KeyStore format)
DNewKeyStoreType.jrbJksKeyStore.mnemonic    = K
DNewKeyStoreType.jrbJksKeyStore.text        = JKS
DNewKeyStoreType.jrbJksKeyStore.tooltip     = Java KeyStore (Oracle's basic KeyStore format)
DNewKeyStoreType.jrbPkcs12KeyStore.mnemonic = P
DNewKeyStoreType.jrbPkcs12KeyStore.text     = PKCS #12
DNewKeyStoreType.jrbPkcs12KeyStore.tooltip  = Public-Key Cryptography Standards #12 KeyStore (RSA's KeyStore format)
DNewKeyStoreType.jrbUberKeyStore.mnemonic   = U
DNewKeyStoreType.jrbUberKeyStore.text       = UBER
DNewKeyStoreType.jrbUberKeyStore.tooltip    = Bouncy Castle UBER KeyStore (More secure version of BKS)

DOpenPkcs11KeyStore.32with64bit.Cause              = A 64-bit PKCS#11 library cannot be used in a 32-bit JRE (and the other way round).
DOpenPkcs11KeyStore.64bitBeforeJRE8.Cause          = The PKCS#11 provider is not supported in a 64-bit Java 7 runtime (and earlier).
DOpenPkcs11KeyStore.NotPkcs11Lib.Cause             = Selected file is not a PKCS#11 library.
DOpenPkcs11KeyStore.ProblemLoadingProvider.Problem = Could not initialize PKCS#11 provider with ''{0}''.
DOpenPkcs11KeyStore.ProblemLoadingProvider.Title   = Problem Initializing PKCS#11 Provider
DOpenPkcs11KeyStore.SelectLib.Title                = Select PKCS#11 Library
DOpenPkcs11KeyStore.SelectLib.button               = Choose
DOpenPkcs11KeyStore.Title                          = Open PKCS#11 KeyStore
DOpenPkcs11KeyStore.WrongConfiguration.Cause       = Configuration errors.
DOpenPkcs11KeyStore.jbCancel.text                  = Cancel
DOpenPkcs11KeyStore.jbOK.text                      = OK
DOpenPkcs11KeyStore.jbP11LibraryBrowse.tooltip     = Browse to native PKCS#11 library.
DOpenPkcs11KeyStore.jcbPkcs11Provider.tooltip      = If SunPKCS11 provider has already been installed via java.security, all instances are listed here.
DOpenPkcs11KeyStore.jlP11Library.text              = PKCS#11 Library:
DOpenPkcs11KeyStore.jlSelectProvider.text          = Select Instance:
DOpenPkcs11KeyStore.jlSlotListIndex.text           = Slot Index:
DOpenPkcs11KeyStore.jrbCreateNew.mnemonic          = C
DOpenPkcs11KeyStore.jrbCreateNew.text              = Register New PKCS#11 Provider
DOpenPkcs11KeyStore.jrbUseExisting.mnemonic        = U
DOpenPkcs11KeyStore.jrbUseExisting.text            = Use Installed PKCS#11 Provider
DOpenPkcs11KeyStore.jspSlotListIndex.tooltip       = Slot list index, 0 indicates the first slot in the list.
DOpenPkcs11KeyStore.jtfP11Library.tooltip          = Path to native PKCS#11 library.
DOpenPkcs11KeyStore.noLibSelected.message          = You have to select a PKCS#11 library first.
DOpenPkcs11KeyStore.providerNotInstalled.message   = PKCS#11 Provider is not installed!

DProperties.NoGetProperties.exception.message      = Could not get KeyStore properties.
DProperties.Title                                  = Properties for ''{0}''
DProperties.jbCopy.mnemonic                        = C
DProperties.jbCopy.text                            = Copy
DProperties.jbCopy.tooltip                         = Copy properties to the clipboard
DProperties.jbOK.text                              = OK
DProperties.properties.Algorithm                   = Algorithm: {0}
DProperties.properties.Certificates                = Certificates
DProperties.properties.Encoded                     = Encoded: {0}
DProperties.properties.File                        = File: {0}
DProperties.properties.Format                      = Format: {0}
DProperties.properties.Issuer                      = Issuer: {0}
DProperties.properties.KeyPairs                    = Key Pairs
DProperties.properties.KeySize                     = Key Size: {0} bits
DProperties.properties.Keys                        = Keys
DProperties.properties.LastModified                = Last Modified: {0}
DProperties.properties.Locked                      = Locked - unlock to get properties
DProperties.properties.Md5Fingerprint              = MD5 Fingerprint: {0}
DProperties.properties.None                        = None
DProperties.properties.PrivateKey                  = Private Key
DProperties.properties.Provider                    = Provider: {0}
DProperties.properties.PublicKey                   = Public Key
DProperties.properties.Root                        = Properties for ''{0}''
DProperties.properties.SecretKey                   = Secret Key
DProperties.properties.SerialNumber                = Serial Number: {0}
DProperties.properties.Sha1Fingerprint             = SHA-1 Fingerprint: {0}
DProperties.properties.SignatureAlgorithm          = Signature Algorithm: {0}
DProperties.properties.Subject                     = Subject: {0}
DProperties.properties.TrustedCertificates         = Trusted Certificates
DProperties.properties.Type                        = Type: {0}
DProperties.properties.ValidFrom                   = Valid From: {0}
DProperties.properties.ValidUntil                  = Valid Until: {0}
DProperties.properties.Version                     = Version: {0}
DProperties.properties.private.dsa.GeneratorG      = Generator G: {0}
DProperties.properties.private.dsa.PrimeModulusP   = Prime Modulus P: {0}
DProperties.properties.private.dsa.PrimeQ          = Prime Q: {0}
DProperties.properties.private.dsa.SecretExponentX = Secret Exponent X: {0}
DProperties.properties.private.rsa.CrtCoefficient  = CRT Coefficient: {0}
DProperties.properties.private.rsa.Modulus         = Modulus: {0}
DProperties.properties.private.rsa.PrimeExponentP  = Prime Exponent P: {0}
DProperties.properties.private.rsa.PrimeExponentQ  = Prime Exponent Q: {0}
DProperties.properties.private.rsa.PrimeP          = Prime P: {0}
DProperties.properties.private.rsa.PrimeQ          = Prime Q: {0}
DProperties.properties.private.rsa.PrivateExponent = Private Exponent: {0}
DProperties.properties.private.rsa.PublicExponent  = Public Exponent: {0}
DProperties.properties.public.dsa.GeneratorG       = Generator G: {0}
DProperties.properties.public.dsa.PrimeModulusP    = Prime Modulus P: {0}
DProperties.properties.public.dsa.PrimeQ           = Prime Q: {0}
DProperties.properties.public.dsa.PublicKeyY       = Public Key Y: {0}
DProperties.properties.public.rsa.Modulus          = Modulus: {0}
DProperties.properties.public.rsa.PublicExponent   = Public Exponent: {0}

DVerifyCertificate.ChooseCACertificatesKeyStore.Title = Choose CA Certificates KeyStore
DVerifyCertificate.ChooseCRLFile.Title                = Choose CRL File
DVerifyCertificate.ChooseCRLFile.button               = Choose
DVerifyCertificate.ReqOcspUrl.Title                   = A value is required for OCSP URL
DVerifyCertificate.Title                              = Verify Certificate ''{0}''
DVerifyCertificate.jbBrowse.text                      = Browse
DVerifyCertificate.jbCancel.text                      = Cancel
DVerifyCertificate.jbLoadCrl.tooltip                  = Open a CRL from disk
DVerifyCertificate.jbLoadKeystore.tooltip             = Open an KeyStore from disk
DVerifyCertificate.jbOk.text                          = OK
DVerifyCertificate.jcbKeyStore.tooltip                = Select the KeyStore
DVerifyCertificate.jcbOcspDigestAlgorithm.tooltip     = Select the digest algorithm to use in the OCSP request
DVerifyCertificate.jcbOcspIncludeNonce.text           = Include Nonce
DVerifyCertificate.jcbOcspIncludeNonce.tooltip        = Include RFC 8954 nonce extension in the OCSP request
DVerifyCertificate.jcbSelectKeyStore.text             = Use an alternate CA keystore for validating the certificate:
DVerifyCertificate.jlCacertFile.text                  = Keystore:
DVerifyCertificate.jlCheckStatus.text                 = Validate certificate chain and check revocation status using
DVerifyCertificate.jlKeyStore.text                    = KeyStore:
DVerifyCertificate.jlOcspDigestAlgorithm.text         = Digest Algorithm:
DVerifyCertificate.jrbChainCheck.text                 = Do not check revocation status, only verify certificate chain
DVerifyCertificate.jrbChainCheck.tooltip              = Validate chain
DVerifyCertificate.jrbCrlCheckDistPoint.text          = CRL Distribution Point extension
DVerifyCertificate.jrbCrlCheckDistPoint.tooltip       = Checks end entity certificate validity by attempting to look up a valid CRL
DVerifyCertificate.jrbCrlCheckFile.text               = CRL file
DVerifyCertificate.jrbCrlCheckFile.tooltip            = Checks end entity certificate validity by attempting to look up a valid CRL
DVerifyCertificate.jrbOcspAiaCheck.text               = OCSP from Authority\u00A0Information\u00A0Access extension
DVerifyCertificate.jrbOcspAiaCheck.tooltip            = Use OCSP URL from AIA extension
DVerifyCertificate.jrbOcspUrlCheck.text               = OCSP with URL
DVerifyCertificate.jrbOcspUrlCheck.tooltip            = Online Certificate Status Protocol
DVerifyCertificate.jtfCrlFile.tooltip                 = CRL File
DVerifyCertificate.jtfOcspUrl.tooltip                 = URL

DViewAsn1Dump.Certificate.Title = Certificate ASN.1 Dump
DViewAsn1Dump.Crl.Title         = CRL ASN.1 Dump
DViewAsn1Dump.Csr.Title         = PKCS#10 Request ASN.1 Dump
DViewAsn1Dump.Extension.Title   = Extension ASN.1 Dump
DViewAsn1Dump.PrivateKey.Title  = Private Key ASN.1 Dump
DViewAsn1Dump.PublicKey.Title   = Public Key ASN.1 Dump
DViewAsn1Dump.jbCopy.mnemonic   = C
DViewAsn1Dump.jbCopy.text       = Copy
DViewAsn1Dump.jbCopy.tooltip    = Copy ASN.1 dump to the clipboard
DViewAsn1Dump.jbOK.text         = OK

DViewAsymmetricKeyFields.PrivateKey.title                      = {0} Private Key Fields
DViewAsymmetricKeyFields.PublicKey.title                       = {0} Public Key Fields
DViewAsymmetricKeyFields.jbOK.text                             = OK
DViewAsymmetricKeyFields.jlFieldValue.text                     = Field Value:
DViewAsymmetricKeyFields.jlFields.text                         = Fields:
DViewAsymmetricKeyFields.jltFields.PrivDsaGeneratorG.text      = Generator G
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeModulusP.text   = Prime Modulus P
DViewAsymmetricKeyFields.jltFields.PrivDsaPrimeQ.text          = Prime Q
DViewAsymmetricKeyFields.jltFields.PrivDsaSecretExponentX.text = Secret Exponent X
DViewAsymmetricKeyFields.jltFields.PrivEcPrivateKey.text       = Private Key
DViewAsymmetricKeyFields.jltFields.PrivEdPrivateKey.text       = Private Key
DViewAsymmetricKeyFields.jltFields.PrivRsaCrtCoefficient.text  = CRT Coefficient
DViewAsymmetricKeyFields.jltFields.PrivRsaModulus.text         = Modulus
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentP.text  = Prime Exponent P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeExponentQ.text  = Prime Exponent Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeP.text          = Prime P
DViewAsymmetricKeyFields.jltFields.PrivRsaPrimeQ.text          = Prime Q
DViewAsymmetricKeyFields.jltFields.PrivRsaPrivateExponent.text = Private Exponent
DViewAsymmetricKeyFields.jltFields.PrivRsaPublicExponent.text  = Public Exponent
DViewAsymmetricKeyFields.jltFields.PubDsaGeneratorG.text       = Generator G
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeModulusP.text    = Prime Modulus P
DViewAsymmetricKeyFields.jltFields.PubDsaPrimeQ.text           = Prime Q
DViewAsymmetricKeyFields.jltFields.PubDsaPublicKeyY.text       = Public Key Y
DViewAsymmetricKeyFields.jltFields.PubEcAffineX.text           = Affine X
DViewAsymmetricKeyFields.jltFields.PubEcAffineY.text           = Affine Y
DViewAsymmetricKeyFields.jltFields.PubEdKey.text               = Public Key
DViewAsymmetricKeyFields.jltFields.PubRsaModulus.text          = Modulus
DViewAsymmetricKeyFields.jltFields.PubRsaPublicExponent.text   = Public Exponent
DViewAsymmetricKeyFields.jltFields.tooltip                     = Displays key's fields
DViewAsymmetricKeyFields.jtaFieldValue.tooltip                 = Displays selected key field's value

DViewCertificate.Extensions.Title                   = Certificate Extensions
DViewCertificate.Issuer.Title                       = Issuer
DViewCertificate.NoGetEncodedCert.exception.message = Could not get the encoded form of the certificate.
DViewCertificate.Pem.Title                          = Certificate PEM
DViewCertificate.PubKeyDetails.Title                = Public Key Details
DViewCertificate.Subject.Title                      = Subject
DViewCertificate.jbAsn1.mnemonic                    = A
DViewCertificate.jbAsn1.text                        = ASN.1
DViewCertificate.jbAsn1.tooltip                     = Display ASN.1 dump for certificate
DViewCertificate.jbExport.mnemonic                  = X
DViewCertificate.jbExtensions.mnemonic              = E
DViewCertificate.jbExtensions.text                  = Extensions
DViewCertificate.jbExtensions.tooltip               = Display the certificate's extensions
DViewCertificate.jbImport.mnemonic                  = I
DViewCertificate.jbImportExport.export.text         = Export
DViewCertificate.jbImportExport.export.tooltip      = Export certificate to file
DViewCertificate.jbImportExport.import.text         = Import
DViewCertificate.jbImportExport.import.tooltip      = Import certificate into keystore
DViewCertificate.jbOK.text                          = OK
DViewCertificate.jbPem.mnemonic                     = P
DViewCertificate.jbPem.text                         = PEM
DViewCertificate.jbPem.tooltip                      = Display certificate as PEM
DViewCertificate.jbVerify.mnemonic                  = V
DViewCertificate.jbVerify.text                      = Verify
DViewCertificate.jbVerify.tooltip                   = Verify certificate
DViewCertificate.jbViewPublicKeyDetails.tooltip     = Display public key's details
DViewCertificate.jdnIssuer.tooltip                  = Certificate issuer's distinguished name
DViewCertificate.jdnSubject.tooltip                 = Certificate subject's distinguished name
DViewCertificate.jlFingerprint.text                 = Fingerprint:
DViewCertificate.jlHierarchy.text                   = Certificate Hierarchy:
DViewCertificate.jlIssuer.text                      = Issuer:
DViewCertificate.jlPublicKey.text                   = Public Key:
DViewCertificate.jlSerialNumberDec.text             = Serial Number (dec.):
DViewCertificate.jlSerialNumberHex.text             = Serial Number (hex.):
DViewCertificate.jlSignatureAlgorithm.text          = Signature Algorithm:
DViewCertificate.jlSubject.text                     = Subject:
DViewCertificate.jlValidFrom.text                   = Valid From:
DViewCertificate.jlValidUntil.text                  = Valid Until:
DViewCertificate.jlVersion.text                     = Version:
DViewCertificate.jtfPublicKey.text                  = {0} {1} bits
DViewCertificate.jtfPublicKey.tooltip               = Certificate's public key algorithm
DViewCertificate.jtfSerialNumberDec.tooltip         = Certificate's serial number assigned by issuer (decimal format)
DViewCertificate.jtfSerialNumberHex.tooltip         = Certificate's serial number assigned by issuer (hexadecimal format)
DViewCertificate.jtfSignatureAlgorithm.tooltip      = Signature algorithm used to sign the certificate
DViewCertificate.jtfValidFrom.notyetvalid.text      = {0} (NOT YET VALID)
DViewCertificate.jtfValidFrom.tooltip               = Certificate valid from this date
DViewCertificate.jtfValidUntil.expired.text         = {0} (EXPIRED)
DViewCertificate.jtfValidUntil.tooltip              = Certificate valid until this date
DViewCertificate.jtfVersion.tooltip                 = Certificate's version number

DViewCrl.EntryExtensions.Title              = Revoked Certificate Extensions
DViewCrl.Extensions.Title                   = CRL Extensions
DViewCrl.Issuer.Title                       = Issuer
DViewCrl.jbCrlAsn1.mnemonic                 = A
DViewCrl.jbCrlAsn1.text                     = ASN.1
DViewCrl.jbCrlAsn1.tooltip                  = Display ASN.1 dump for CRL
DViewCrl.jbCrlEntryExtensions.mnemonic      = x
DViewCrl.jbCrlEntryExtensions.text          = Extensions
DViewCrl.jbCrlEntryExtensions.tooltip       = Display the revoked certificate's extensions
DViewCrl.jbCrlExtensions.mnemonic           = E
DViewCrl.jbCrlExtensions.text               = Extensions
DViewCrl.jbCrlExtensions.tooltip            = Display the CRL's extensions
DViewCrl.jbOK.text                          = OK
DViewCrl.jdnIssuer.tooltip                  = CRL issuer's distinguished name
DViewCrl.jlEffectiveDate.text               = Effective Date:
DViewCrl.jlIssuer.text                      = Issuer:
DViewCrl.jlNextUpdate.text                  = Next Update:
DViewCrl.jlRevokedCerts.text                = {0,choice,0#Empty CRL (no entries).|1#One revoked Certificate:|1<Revoked Certificates ({0,number,integer} entries):}
DViewCrl.jlSignatureAlgorithm.text          = Signature Algorithm:
DViewCrl.jlVersion.text                     = Version:
DViewCrl.jtfEffectiveDate.noteffective.text = {0} (NOT YET EFFECTIVE)
DViewCrl.jtfEffectiveDate.tooltip           = CRL effective from this date
DViewCrl.jtfNextUpdate.none.text            = None
DViewCrl.jtfNextUpdate.tooltip              = The date of the next CRL update
DViewCrl.jtfNextUpdate.updateavailable.text = {0} (UPDATE AVAILABLE)
DViewCrl.jtfSignatureAlgorithm.tooltip      = Signature algorithm used to sign the CRL
DViewCrl.jtfVersion.tooltip                 = CRL's version number

DViewCsr.NoGetPublicKey.message         = Could not get the CSR's public key.
DViewCsr.Pem.Title                      = View PKCS#10 CSR as PEM
DViewCsr.PubKeyDetails.Title            = Public Key Details
DViewCsr.SaveCaReply.Title              = Choose CA Reply File
DViewCsr.SaveCaReply.button             = Choose
DViewCsr.Subject.Title                  = Subject
DViewCsr.Title                          = Sign CSR
DViewCsr.jbAsn1.mnemonic                = A
DViewCsr.jbAsn1.text                    = ASN.1
DViewCsr.jbAsn1.tooltip                 = Display ASN.1 dump for CSR
DViewCsr.jbExtensions.mnemonic          = E
DViewCsr.jbExtensions.text              = Extensions
DViewCsr.jbExtensions.tooltip           = Display the CSR's extensions
DViewCsr.jbVerify.mnemonic              = V
DViewCsr.jbVerify.text                  = Verify
DViewCsr.jbVerify.tooltip               = Verify the CSR's signature
DViewCsr.jbOK.text                      = OK
DViewCsr.jbPem.mnemonic                 = P
DViewCsr.jbPem.text                     = PEM
DViewCsr.jbPem.tooltip                  = Display CSR as PEM
DViewCsr.jbViewPublicKeyDetails.tooltip = Display public key's details
DViewCsr.jdnSubject.tooltip             = CSR subject's distinguished name
DViewCsr.jlChallenge.text               = Challenge:
DViewCsr.jlFormat.text                  = Format:
DViewCsr.jlPublicKey.text               = Public Key:
DViewCsr.jlSignatureAlgorithm.text      = Signature Algorithm:
DViewCsr.jlSubject.text                 = Subject:
DViewCsr.jlUnstructuredName.text        = Unstructured Name:
DViewCsr.jtfChallenge.tooltip           = <html>CSR's challenge passphrase.<br>Used to request certificate revocation</html>
DViewCsr.jtfFormat.Pkcs10.text          = PKCS #10
DViewCsr.jtfFormat.Spkac.text           = SPKAC
DViewCsr.jtfFormat.tooltip              = CSR's format (PKCS #10 or SPKAC)
DViewCsr.jtfPublicKey.text              = {0} {1} bits
DViewCsr.jtfPublicKey.tooltip           = CSR's public key algorithm
DViewCsr.jtfSignatureAlgorithm.tooltip  = Signature algorithm used to sign CSR
DViewCsr.jtfUnstructuredName.tooltip    = Optional Company Name for compatibility with OpenSSL (PKCS#10 attribute "unstructuredName")
DViewCsr.Verify.title                   = Signature Verification Result
DViewCsr.VerifyOK.message               = Signature is valid
DViewCsr.NoVerify.message               = Signature is invalid

DViewDHParameters.ChooseExportFile.button     = Choose
DViewDHParameters.ExportPem.Title             = Export PEM
DViewDHParameters.ExportPemSuccessful.message = PEM export successful.
DViewDHParameters.OverWriteFile.message       = The file ''{0}'' already exists.\nDo you want to overwrite it?
DViewDHParameters.jbCopy.mnemonic             = C
DViewDHParameters.jbCopy.text                 = Copy
DViewDHParameters.jbCopy.tooltip              = Copy PEM data to the clipboard
DViewDHParameters.jbExport.export.text        = Export
DViewDHParameters.jbExport.export.tooltip     = Export PEM
DViewDHParameters.jbExport.mnemonic           = E
DViewDHParameters.jbOK.text                   = OK
DViewDHParameters.jtAreaPem.mnemonic          = t
DViewDHParameters.jtAreaPem.tooltip           = DH parameters in PEM format

DViewJwt.Title              = View JWT
DViewJwt.jbCopy.mnemonic    = C
DViewJwt.jbCopy.text        = Copy
DViewJwt.jbCopy.tooltip     = Copy JWT to the clipboard
DViewJwt.jbOK.text          = Ok
DViewJwt.jlEncoded.text     = Encoded:
DViewJwt.jlHeader.text      = Header:
DViewJwt.jlPayload.text     = Payload:
DViewJwt.jtaEncoded.tooltip = JSON Web Token
DViewJwt.jtaHeader.tooltip  = JWT header
DViewJwt.jtaPayload.tooltip = JWT payload
DViewJwt.jlPublicKey.text   = Public key:
DViewJwt.jtaPublicKey.tooltip = Public key
DViewJwt.Verify.Title       = Verify signature
DViewJwt.jbVerify.text      = Verify
DViewJwt.jbVerify.tooltip   = Verify signature
DViewJwt.InvalidPublicKey.message = Invalid public key
DViewJwt.SignatureVerified.message = Signature verified
DViewJwt.InvalidSignature.message = Invalid signature

DViewKeyPair.ViewCertificateDetails.Title  = Certificate Details for key pair
DViewKeyPair.ViewPrivateKeyDetails.Title   = Private Key Details for key pair
DViewKeyPair.jbCertificateDetails.mnemonic = C
DViewKeyPair.jbCertificateDetails.text     = Certificate Details
DViewKeyPair.jbCertificateDetails.tooltip  = Display the key pair's certificate details
DViewKeyPair.jbImport.mnemonic             = I
DViewKeyPair.jbOK.text                     = OK
DViewKeyPair.jbPrivateKeyDetails.mnemonic  = P
DViewKeyPair.jbPrivateKeyDetails.text      = Private Key Details
DViewKeyPair.jbPrivateKeyDetails.tooltip   = Display the key pair's private key details

DViewPem.ChooseExportFile.Title                 = Choose PEM Export File
DViewPem.ChooseExportFile.button                = Choose
DViewPem.ExportPem.Title                        = Export PEM
DViewPem.ExportPemCertificateSuccessful.message = PEM Export Successful.
DViewPem.NoWriteFile.message                    = Could not write to file ''{0}''.
DViewPem.OverWriteFile.message                  = The file ''{0}'' already exists.\nDo you want to overwrite it?
DViewPem.jbCopy.mnemonic                        = C
DViewPem.jbCopy.text                            = Copy
DViewPem.jbCopy.tooltip                         = Copy PEM data to the clipboard
DViewPem.jbExport.mnemonic                      = E
DViewPem.jbExport.text                          = Export
DViewPem.jbExport.tooltip                       = Export PEM data CSR to file
DViewPem.jbOK.text                              = OK

DViewPrivateKey.Pem.Title            = Private Key in PKCS#8 PEM Format
DViewPrivateKey.jbAsn1.mnemonic      = A
DViewPrivateKey.jbAsn1.text          = ASN.1
DViewPrivateKey.jbAsn1.tooltip       = Display ASN.1 dump for private key
DViewPrivateKey.jbExport.mnemonic    = X
DViewPrivateKey.jbExport.text        = Export
DViewPrivateKey.jbExport.tooltip     = Export private key to file
DViewPrivateKey.jbFields.mnemonic    = F
DViewPrivateKey.jbFields.text        = Fields
DViewPrivateKey.jbFields.tooltip     = Display private key's fields
DViewPrivateKey.jbOK.text            = OK
DViewPrivateKey.jbPem.mnemonic       = E
DViewPrivateKey.jbPem.text           = PEM
DViewPrivateKey.jbPem.tooltip        = Display private key in PEM format
DViewPrivateKey.jlAlgorithm.text     = Algorithm:
DViewPrivateKey.jlEncoded.text       = Encoded:
DViewPrivateKey.jlFormat.text        = Format:
DViewPrivateKey.jlKeySize.text       = Key Size:
DViewPrivateKey.jtfAlgorithm.tooltip = Private key's algorithm
DViewPrivateKey.jtfEncoded.tooltip   = Private key's encoded form
DViewPrivateKey.jtfFormat.tooltip    = Private key's encoded format
DViewPrivateKey.jtfKeySize.text      = {0} bits
DViewPrivateKey.jtfKeySize.tooltip   = Private key's size

DViewPublicKey.Pem.Title            = Public Key in PEM Format
DViewPublicKey.jbAsn1.mnemonic      = A
DViewPublicKey.jbAsn1.text          = ASN.1
DViewPublicKey.jbAsn1.tooltip       = Display ASN.1 dump for public key
DViewPublicKey.jbFields.mnemonic    = F
DViewPublicKey.jbFields.text        = Fields
DViewPublicKey.jbFields.tooltip     = Display public key's fields
DViewPublicKey.jbOK.text            = OK
DViewPublicKey.jbPem.mnemonic       = E
DViewPublicKey.jbPem.text           = PEM
DViewPublicKey.jbPem.tooltip        = Display public key in PEM format
DViewPublicKey.jlAlgorithm.text     = Algorithm:
DViewPublicKey.jlEncoded.text       = Encoded:
DViewPublicKey.jlFormat.text        = Format:
DViewPublicKey.jlKeySize.text       = Key Size:
DViewPublicKey.jtfAlgorithm.tooltip = Public key's algorithm
DViewPublicKey.jtfEncoded.tooltip   = Public key's encoded form
DViewPublicKey.jtfFormat.tooltip    = Public key's encoded format
DViewPublicKey.jtfKeySize.text      = {0} bits
DViewPublicKey.jtfKeySize.tooltip   = Public key's size

DViewSecretKey.NotAValidHexString.message = Not a valid hex string.
DViewSecretKey.NotAValidKey.message       = Not a valid key.
DViewSecretKey.jbCancel.text              = Cancel
DViewSecretKey.jbOK.text                  = OK
DViewSecretKey.jlAlgorithm.text           = Algorithm:
DViewSecretKey.jlEncoded.text             = Encoded:
DViewSecretKey.jlFormat.text              = Format:
DViewSecretKey.jlKeySize.text             = Key Size:
DViewSecretKey.jtfAlgorithm.tooltip       = Secret key's algorithm
DViewSecretKey.jtfEncoded.tooltip         = Secret key's encoded form in hex format (editable)
DViewSecretKey.jtfFormat.tooltip          = Secret key's encoded format
DViewSecretKey.jtfKeySize.text            = {0} bits
DViewSecretKey.jtfKeySize.tooltip         = Secret key's size

PasswordCallbackHandler.Title = PIN Login

RevokedCertsTableHeadRend.RevocationDateColumn.tooltip = Revocation date/time of revoked certificate
RevokedCertsTableHeadRend.SerialNumberColumn.tooltip   = Serial number of revoked certificate

RevokedCertsTableModel.RevocationDateColumn = Revocation Date
RevokedCertsTableModel.SerialNumberColumn   = Serial Number
