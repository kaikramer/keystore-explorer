
DExportCertificates.Certificate.Simple.Title      = Export Certificate
DExportCertificates.Certificate.Title             = Export Certificate ''{0}''
DExportCertificates.CertificateSelected.Title     = Export Selected Certificates ''{0}''
DExportCertificates.CertificateChain.Simple.Title = Export Certificate Chain
DExportCertificates.CertificateChain.Title        = Export Certificate Chain ''{0}''
DExportCertificates.ChooseExportFile.Title        = Choose Certificate Export File
DExportCertificates.ChooseExportFile.button       = Choose
DExportCertificates.ExportFileRequired.message    = Path to Export File required.
DExportCertificates.OverWriteExportFile.message   = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportCertificates.jbBrowse.mnemonic             = B
DExportCertificates.jbBrowse.text                 = Browse
DExportCertificates.jbBrowse.tooltip              = Browse to export file
DExportCertificates.jbCancel.text                 = Cancel
DExportCertificates.jbExport.mnemonic             = E
DExportCertificates.jbExport.text                 = Export
DExportCertificates.jbExport.tooltip              = Export to file
DExportCertificates.jcbExportPem.tooltip          = PEM encode the export?
DExportCertificates.jlExportFile.text             = Export File:
DExportCertificates.jlExportFormat.text           = Export Format:
DExportCertificates.jlExportLength.text           = Export Length:
DExportCertificates.jlExportPem.text              = PEM:
DExportCertificates.jrbExportChain.mnemonic       = C
DExportCertificates.jrbExportChain.text           = Entire Chain
DExportCertificates.jrbExportChain.tooltip        = Export the entire certificate chain
DExportCertificates.jrbExportHead.mnemonic        = H
DExportCertificates.jrbExportHead.text            = Head Only
DExportCertificates.jrbExportHead.tooltip         = Export the head certificate only
DExportCertificates.jrbExportPkcs7.mnemonic       = P
DExportCertificates.jrbExportPkcs7.text           = PKCS #7
DExportCertificates.jrbExportPkcs7.tooltip        = Export in PKCS #7 format
DExportCertificates.jrbExportPkiPath.mnemonic     = K
DExportCertificates.jrbExportPkiPath.text         = PKI Path
DExportCertificates.jrbExportPkiPath.tooltip      = Export in PKI Path format
DExportCertificates.jrbExportSpc.mnemonic         = S
DExportCertificates.jrbExportSpc.text             = SPC
DExportCertificates.jrbExportSpc.tooltip          = Export in Software Publisher Certificate (SPC) format
DExportCertificates.jrbExportX509.mnemonic        = X
DExportCertificates.jrbExportX509.text            = X.509
DExportCertificates.jrbExportX509.tooltip         = Export in X.509 format
DExportCertificates.jtfExportFile.tooltip         = File to export to

DExportCrl.ChooseExportFile.Title      = Choose CRL Export File
DExportCrl.ChooseExportFile.button     = Choose
DExportCrl.ExportFileRequired.message  = Path to Export File required.
DExportCrl.OverWriteExportFile.message = The file ''{0}'' already exists.\nDo you want to overwrite it?
DExportCrl.Simple.Title                = Export CRL
DExportCrl.Title                       = Export CRL
DExportCrl.jbBrowse.mnemonic           = B
DExportCrl.jbBrowse.text               = Browse
DExportCrl.jbBrowse.tooltip            = Browse to export file
DExportCrl.jbCancel.text               = Cancel
DExportCrl.jbExport.mnemonic           = E
DExportCrl.jbExport.text               = Export
DExportCrl.jbExport.tooltip            = Export to file
DExportCrl.jcbExportPem.tooltip        = PEM encode the export?
DExportCrl.jlExportFile.text           = Export File:
DExportCrl.jlExportPem.text            = PEM:
DExportCrl.jtfExportFile.tooltip       = File to export to

DExportKeyPair.ChooseExportFile.Title               = Choose Key Pair Export File
DExportKeyPair.ChooseExportFile.button              = Choose
DExportKeyPair.ExportFileRequired.message           = Path to Export File required.
DExportKeyPair.MinimumPasswordQualityNotMet.message = The supplied password does not meet the specified minimum for quality.
DExportKeyPair.OverWriteExportFile.message          = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportKeyPair.PasswordsNoMatch.message             = The supplied passwords do not match.
DExportKeyPair.Simple.Title                         = Export Key Pair
DExportKeyPair.Title                                = Export Key Pair from KeyStore Entry ''{0}''
DExportKeyPair.jbBrowse.mnemonic                    = B
DExportKeyPair.jbBrowse.text                        = Browse
DExportKeyPair.jbBrowse.tooltip                     = Browse to export file
DExportKeyPair.jbCancel.text                        = Cancel
DExportKeyPair.jbExport.mnemonic                    = E
DExportKeyPair.jbExport.text                        = Export
DExportKeyPair.jbExport.tooltip                     = Export the key pair to file
DExportKeyPair.jlConfirmPassword.text               = Confirm Password:
DExportKeyPair.jlExportFile.text                    = Export File:
DExportKeyPair.jlFormat.text                        = Format:
DExportKeyPair.jlPassword.text                      = Password for Output File:
DExportKeyPair.jpfConfirmPassword.tooltip           = Confirmation of protection password
DExportKeyPair.jpqfPassword.tooltip                 = Password to protect exported key pair with
DExportKeyPair.jrbFormatPEM.text                    = PEM
DExportKeyPair.jrbFormatPEM.tooltip                 = Export private key and certificate chain as a single PEM file
DExportKeyPair.jrbFormatPkcs12.text                 = PKCS#12
DExportKeyPair.jrbFormatPkcs12.tooltip              = Export private key and certificate chain as PKCS#12 file
DExportKeyPair.jtfExportFile.tooltip                = File to export key pair to

DExportPrivateKeyOpenSsl.ChooseExportFile.Title               = Choose Private Key Export File
DExportPrivateKeyOpenSsl.ChooseExportFile.button              = Choose
DExportPrivateKeyOpenSsl.ExportFileRequired.message           = Path to Export File required.
DExportPrivateKeyOpenSsl.MinimumPasswordQualityNotMet.message = The supplied password does not meet the specified minimum for quality.
DExportPrivateKeyOpenSsl.OverWriteExportFile.message          = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportPrivateKeyOpenSsl.PasswordsNoMatch.message             = The supplied passwords do not match.
DExportPrivateKeyOpenSsl.Simple.Title                         = Export Private Key as OpenSSL
DExportPrivateKeyOpenSsl.Title                                = Export Private Key as OpenSSL from KeyStore Entry ''{0}''
DExportPrivateKeyOpenSsl.jbBrowse.mnemonic                    = B
DExportPrivateKeyOpenSsl.jbBrowse.text                        = Browse
DExportPrivateKeyOpenSsl.jbBrowse.tooltip                     = Browse to export file
DExportPrivateKeyOpenSsl.jbCancel.text                        = Cancel
DExportPrivateKeyOpenSsl.jbExport.mnemonic                    = E
DExportPrivateKeyOpenSsl.jbExport.text                        = Export
DExportPrivateKeyOpenSsl.jbExport.tooltip                     = Export the private key to file
DExportPrivateKeyOpenSsl.jcbEncrypt.tooltip                   = Encrypt the exported private key using PBE?
DExportPrivateKeyOpenSsl.jcbExportPem.tooltip                 = PEM encode the exported private key?  Required where export is encrypted
DExportPrivateKeyOpenSsl.jcbPbeAlg.tooltip                    = Password Based Encryption (PBE) algorithm
DExportPrivateKeyOpenSsl.jlConfirmPassword.text               = Confirm Password:
DExportPrivateKeyOpenSsl.jlEncrypt.text                       = Encrypt:
DExportPrivateKeyOpenSsl.jlExportFile.text                    = Export File:
DExportPrivateKeyOpenSsl.jlExportPem.text                     = PEM:
DExportPrivateKeyOpenSsl.jlPassword.text                      = Encryption Password:
DExportPrivateKeyOpenSsl.jlPbeAlg.text                        = Encryption Algorithm:
DExportPrivateKeyOpenSsl.jpfConfirmPassword.tooltip           = Confirmation of protection password
DExportPrivateKeyOpenSsl.jpqfPassword.tooltip                 = PBE password to protect exported private key with
DExportPrivateKeyOpenSsl.jtfExportFile.tooltip                = File to export private key to

DExportPrivateKeyPkcs8.ChooseExportFile.Title               = Choose Private Key Export File
DExportPrivateKeyPkcs8.ChooseExportFile.button              = Choose
DExportPrivateKeyPkcs8.ExportFileRequired.message           = Path to Export File required.
DExportPrivateKeyPkcs8.MinimumPasswordQualityNotMet.message = The supplied password does not meet the specified minimum for quality.
DExportPrivateKeyPkcs8.OverWriteExportFile.message          = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportPrivateKeyPkcs8.PasswordsNoMatch.message             = The supplied passwords do not match.
DExportPrivateKeyPkcs8.Simple.Title                         = Export Private Key as PKCS #8
DExportPrivateKeyPkcs8.Title                                = Export Private Key as PKCS #8 from KeyStore Entry ''{0}''
DExportPrivateKeyPkcs8.jbBrowse.mnemonic                    = B
DExportPrivateKeyPkcs8.jbBrowse.text                        = Browse
DExportPrivateKeyPkcs8.jbBrowse.tooltip                     = Browse to export file
DExportPrivateKeyPkcs8.jbCancel.text                        = Cancel
DExportPrivateKeyPkcs8.jbExport.mnemonic                    = E
DExportPrivateKeyPkcs8.jbExport.text                        = Export
DExportPrivateKeyPkcs8.jbExport.tooltip                     = Export the private key to file
DExportPrivateKeyPkcs8.jcbEncrypt.tooltip                   = Encrypt the exported private key using PBE?
DExportPrivateKeyPkcs8.jcbExportPem.tooltip                 = PEM encode the exported private key?
DExportPrivateKeyPkcs8.jcbPbeAlg.tooltip                    = Password Based Encryption (PBE) algorithm
DExportPrivateKeyPkcs8.jlConfirmPassword.text               = Confirm Password:
DExportPrivateKeyPkcs8.jlEncrypt.text                       = Encrypt:
DExportPrivateKeyPkcs8.jlExportFile.text                    = Export File:
DExportPrivateKeyPkcs8.jlExportPem.text                     = PEM:
DExportPrivateKeyPkcs8.jlPassword.text                      = Encryption Password:
DExportPrivateKeyPkcs8.jlPbeAlg.text                        = Encryption Algorithm:
DExportPrivateKeyPkcs8.jpfConfirmPassword.tooltip           = Confirmation of protection password
DExportPrivateKeyPkcs8.jpqfPassword.tooltip                 = PBE password to protect exported private key with
DExportPrivateKeyPkcs8.jtfExportFile.tooltip                = File to export private key to

DExportPrivateKeyPvk.ChooseExportFile.Title               = Choose Private Key Export File
DExportPrivateKeyPvk.ChooseExportFile.button              = Choose
DExportPrivateKeyPvk.ExportFileRequired.message           = Path to Export File required.
DExportPrivateKeyPvk.MinimumPasswordQualityNotMet.message = The supplied password does not meet the specified minimum for quality.
DExportPrivateKeyPvk.OverWriteExportFile.message          = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportPrivateKeyPvk.PasswordsNoMatch.message             = The supplied passwords do not match.
DExportPrivateKeyPvk.Simple.Title                         = Export Private Key as PVK
DExportPrivateKeyPvk.Title                                = Export Private Key as PVK from KeyStore Entry ''{0}''
DExportPrivateKeyPvk.jbBrowse.mnemonic                    = B
DExportPrivateKeyPvk.jbBrowse.text                        = Browse
DExportPrivateKeyPvk.jbBrowse.tooltip                     = Browse to export file
DExportPrivateKeyPvk.jbCancel.text                        = Cancel
DExportPrivateKeyPvk.jbExport.mnemonic                    = E
DExportPrivateKeyPvk.jbExport.text                        = Export
DExportPrivateKeyPvk.jbExport.tooltip                     = Export the private key to file
DExportPrivateKeyPvk.jcbEncrypt.tooltip                   = Encrypt the exported private key?
DExportPrivateKeyPvk.jlConfirmPassword.text               = Confirm Password:
DExportPrivateKeyPvk.jlEncrypt.text                       = Encrypt:
DExportPrivateKeyPvk.jlEncryptionStrength.text            = Encryption Strength:
DExportPrivateKeyPvk.jlExportFile.text                    = Export File:
DExportPrivateKeyPvk.jlKeyType.text                       = Key Type:
DExportPrivateKeyPvk.jlPassword.text                      = Encryption Password:
DExportPrivateKeyPvk.jpfConfirmPassword.tooltip           = Confirmation of protection password
DExportPrivateKeyPvk.jpqfPassword.tooltip                 = Password to protect exported private key with
DExportPrivateKeyPvk.jrbExchange.mnemonic                 = x
DExportPrivateKeyPvk.jrbExchange.text                     = Exchange
DExportPrivateKeyPvk.jrbExchange.tooltip                  = Mark exported key for exchange purposes
DExportPrivateKeyPvk.jrbSignature.mnemonic                = S
DExportPrivateKeyPvk.jrbSignature.text                    = Signature
DExportPrivateKeyPvk.jrbSignature.tooltip                 = Mark exported key for signature purposes
DExportPrivateKeyPvk.jrbStrong.mnemonic                   = t
DExportPrivateKeyPvk.jrbStrong.text                       = Strong
DExportPrivateKeyPvk.jrbStrong.tooltip                    = Use strong encryption to protect exported key
DExportPrivateKeyPvk.jrbWeak.mnemonic                     = W
DExportPrivateKeyPvk.jrbWeak.text                         = Weak
DExportPrivateKeyPvk.jrbWeak.tooltip                      = Use weak encryption to protect exported key
DExportPrivateKeyPvk.jtfExportFile.tooltip                = File to export private key to

DExportPrivateKeyJwk.ChooseExportFile.Title               = Choose Private Key Export File
DExportPrivateKeyJwk.ChooseExportFile.button              = Choose
DExportPrivateKeyJwk.ExportFileRequired.message           = Path to Export File required.
DExportPrivateKeyJwk.OverWriteExportFile.message          = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportPrivateKeyJwk.Simple.Title                         = Export Private Key as JWK
DExportPrivateKeyJwk.Title                                = Export Private Key as JWK from KeyStore Entry ''{0}''
DExportPrivateKeyJwk.jbBrowse.mnemonic                    = B
DExportPrivateKeyJwk.jbBrowse.text                        = Browse
DExportPrivateKeyJwk.jbBrowse.tooltip                     = Browse to export file
DExportPrivateKeyJwk.jbCancel.text                        = Cancel
DExportPrivateKeyJwk.jbExport.mnemonic                    = E
DExportPrivateKeyJwk.jbExport.text                        = Export
DExportPrivateKeyJwk.jbExport.tooltip                     = Export the private key to file
DExportPrivateKeyJwk.jlExportFile.text                    = Export File:
DExportPrivateKeyJwk.jtfExportFile.tooltip                = File to export private key to

DExportPrivateKeyType.Title               = Export Private Key Type
DExportPrivateKeyType.jbCancel.text       = Cancel
DExportPrivateKeyType.jbOK.text           = OK
DExportPrivateKeyType.jlExportType.text   = Select the type of private key export required:
DExportPrivateKeyType.jrbOpenSsl.mnemonic = O
DExportPrivateKeyType.jrbOpenSsl.text     = OpenSSL
DExportPrivateKeyType.jrbOpenSsl.tooltip  = Export the private key as OpenSSL
DExportPrivateKeyType.jrbPkcs8.mnemonic   = P
DExportPrivateKeyType.jrbPkcs8.text       = PKCS #8
DExportPrivateKeyType.jrbPkcs8.tooltip    = Export the private key as PKCS #8
DExportPrivateKeyType.jrbPvk.mnemonic     = V
DExportPrivateKeyType.jrbPvk.text         = PVK
DExportPrivateKeyType.jrbPvk.tooltip      = Export the private key as Microsoft PVK
DExportPrivateKeyType.jrbJwk.text         = JWK
DExportPrivateKeyType.jrbJwk.tooltip      = Export the private key as JWK
DExportPrivateKeyType.jrbJwk.mnemonic     = J


DExportPublicKey.ChooseExportFile.Title      = Choose Public Key Export File
DExportPublicKey.ChooseExportFile.button     = Choose
DExportPublicKey.ExportFileRequired.message  = Path to Export File required.
DExportPublicKey.OverWriteExportFile.message = The Export File ''{0}'' already exists.\nDo you want to overwrite it?
DExportPublicKey.Simple.Title                = Export Public Key
DExportPublicKey.Title                       = Export Public Key from KeyStore Entry ''{0}''
DExportPublicKey.jbBrowse.mnemonic           = B
DExportPublicKey.jbBrowse.text               = Browse
DExportPublicKey.jbBrowse.tooltip            = Browse to export file
DExportPublicKey.jbCancel.text               = Cancel
DExportPublicKey.jbExport.mnemonic           = E
DExportPublicKey.jbExport.text               = Export
DExportPublicKey.jbExport.tooltip            = Export the public key to file
DExportPublicKey.jlExportFile.text           = Export File:
DExportPublicKey.jtfExportFile.tooltip       = File to export public key to
DExportPublicKey.jrbExportOpenSsl.text       = OpenSSL
DExportPublicKey.jrbExportOpenSsl.tooltip    = Export OpenSSL public key in binary format?
DExportPublicKey.jrbExportOpenSslPem.text    = OpenSSL, PEM encoded
DExportPublicKey.jrbExportOpenSslPem.tooltip = PEM encode the exported public key?
DExportPublicKey.jrbExportJwk.text           = JWK
DExportPublicKey.jrbExportJwk.tooltip        = Export public key as JWK?


DImportKeyPairOpenSsl.CertificateFileChooser.button     = Choose
DImportKeyPairOpenSsl.CertificateRequired.message       = Path to certificate(s) file required.
DImportKeyPairOpenSsl.ChooseCertificate.Title           = Choose Certificate(s)
DImportKeyPairOpenSsl.ChoosePrivateKey.Title            = Choose OpenSSL Private Key
DImportKeyPairOpenSsl.CorruptedCerts.Cause              = The certificate(s) file is corrupted.
DImportKeyPairOpenSsl.CorruptedOpenSsl.Cause            = The OpenSSL private key file is corrupted.
DImportKeyPairOpenSsl.KeyPairInvalid.message            = The private key and certificate chain do not comprise a valid key pair.
DImportKeyPairOpenSsl.NoCertsFound.message              = No certificates found in file ''{0}''.
DImportKeyPairOpenSsl.NoLoadCerts.Problem               = Could not load the certificate(s) file ''{0}''.
DImportKeyPairOpenSsl.NoLoadEncryptedOpenSsl.Problem    = Could not load the encrypted OpenSSL private key file ''{0}''.
DImportKeyPairOpenSsl.NoLoadUnencryptedOpenSsl.Problem  = Could not load the unencrypted OpenSSL private key file ''{0}''.
DImportKeyPairOpenSsl.NoReadFile.message                = Could not read from file ''{0}''.
DImportKeyPairOpenSsl.NotCerts.Cause                    = The file is not in a supported format: X.509, PKCS #7, PKI Path or SPC.
DImportKeyPairOpenSsl.NotOpenSsl.Cause                  = The file is not in OpenSSL format.
DImportKeyPairOpenSsl.PasswordIncorrectOpenSsl.Cause    = The supplied decryption password is not correct.
DImportKeyPairOpenSsl.PrivateKeyEncrypted.message       = The OpenSSL private key file ''{0}'' is encrypted.
DImportKeyPairOpenSsl.PrivateKeyFileChooser.button      = Choose
DImportKeyPairOpenSsl.PrivateKeyNotEncrypted.message    = The OpenSSL private key file ''{0}'' is not encrypted.
DImportKeyPairOpenSsl.PrivateKeyPbeNotSupported.message = The OpenSSL private key file is protected by an unsupported encryption algorithm: ''{0}''.
DImportKeyPairOpenSsl.PrivateKeyRequired.message        = Path to private key file required.
DImportKeyPairOpenSsl.ProblemLoadingCerts.Title         = Problem Loading Certificate(s)
DImportKeyPairOpenSsl.ProblemLoadingOpenSsl.Title       = Problem Loading OpenSSL Private Key
DImportKeyPairOpenSsl.Title                             = Import OpenSSL Key Pair
DImportKeyPairOpenSsl.ViewCertificateDetails.Title      = Certificate Details for file ''{0}''
DImportKeyPairOpenSsl.ViewPrivateKeyDetails.Title       = Private Key Details for file ''{0}''
DImportKeyPairOpenSsl.jbCancel.text                     = Cancel
DImportKeyPairOpenSsl.jbCertificateBrowse.mnemonic      = R
DImportKeyPairOpenSsl.jbCertificateBrowse.text          = Browse
DImportKeyPairOpenSsl.jbCertificateBrowse.tooltip       = Browse to a certificate(s) file
DImportKeyPairOpenSsl.jbCertificateDetails.mnemonic     = E
DImportKeyPairOpenSsl.jbCertificateDetails.text         = Details
DImportKeyPairOpenSsl.jbCertificateDetails.tooltip      = Display the certificate(s) details
DImportKeyPairOpenSsl.jbImport.mnemonic                 = I
DImportKeyPairOpenSsl.jbImport.text                     = Import
DImportKeyPairOpenSsl.jbImport.tooltip                  = Import the selected key pair
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.mnemonic       = B
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.text           = Browse
DImportKeyPairOpenSsl.jbPrivateKeyBrowse.tooltip        = Browse to a OpenSSL private key file
DImportKeyPairOpenSsl.jbPrivateKeyDetails.mnemonic      = D
DImportKeyPairOpenSsl.jbPrivateKeyDetails.text          = Details
DImportKeyPairOpenSsl.jbPrivateKeyDetails.tooltip       = Display the private key details
DImportKeyPairOpenSsl.jcbEncrypted.tooltip              = Is the OpenSSL private key file encrypted?
DImportKeyPairOpenSsl.jlCertificate.text                = Certificate(s) File:
DImportKeyPairOpenSsl.jlEncrypted.text                  = Encrypted Private Key:
DImportKeyPairOpenSsl.jlPassword.text                   = Decryption Password:
DImportKeyPairOpenSsl.jlPrivateKey.text                 = OpenSSL Private Key File:
DImportKeyPairOpenSsl.jpfPassword.tooltip               = Password used to decrypt the OpenSSL private key file
DImportKeyPairOpenSsl.jtfCertificatePath.tooltip        = Path to certificate(s) file
DImportKeyPairOpenSsl.jtfPrivateKeyPath.tooltip         = Path to OpenSSL private key file

DImportKeyPairPkcs12.ChooseKeyPair.Title           = Choose PKCS #12 Key Pair
DImportKeyPairPkcs12.CorruptedPkcs12.Cause         = The PKCS #12 file is corrupted.
DImportKeyPairPkcs12.KeyPairFileChooser.button     = Choose
DImportKeyPairPkcs12.KeyPairInvalid.message        = The private key and certificate chain do not comprise a valid key pair.
DImportKeyPairPkcs12.KeyPairRequired.message       = Path to PKCS #12 key pair file required.
DImportKeyPairPkcs12.NoKeyPairPkcs12File.message   = No key pair was found in file ''{0}''.
DImportKeyPairPkcs12.NoLoadPkcs12.Problem          = Could not load the PKCS #12 file ''{0}''.
DImportKeyPairPkcs12.NoReadFile.message            = Could not read from file ''{0}''.
DImportKeyPairPkcs12.NotPkcs12.Cause               = The file is not in PKCS #12 format.
DImportKeyPairPkcs12.PasswordIncorrectPkcs12.Cause = The supplied decryption password is not correct.
DImportKeyPairPkcs12.ProblemLoadingPkcs12.Title    = Problem Loading PKCS #12
DImportKeyPairPkcs12.Title                         = Import PKCS #12 Key Pair
DImportKeyPairPkcs12.ViewKeyPairDetails.Title      = Key Pair Details for file ''{0}''
DImportKeyPairPkcs12.jbBrowse.mnemonic             = B
DImportKeyPairPkcs12.jbBrowse.text                 = Browse
DImportKeyPairPkcs12.jbBrowse.tooltip              = Browse to a PKCS #12 key pair file
DImportKeyPairPkcs12.jbCancel.text                 = Cancel
DImportKeyPairPkcs12.jbDetails.mnemonic            = D
DImportKeyPairPkcs12.jbDetails.text                = Details
DImportKeyPairPkcs12.jbDetails.tooltip             = Display the key pair's details
DImportKeyPairPkcs12.jbImport.mnemonic             = I
DImportKeyPairPkcs12.jbImport.text                 = Import
DImportKeyPairPkcs12.jbImport.tooltip              = Import the selected key pair
DImportKeyPairPkcs12.jlPassword.text               = Decryption Password:
DImportKeyPairPkcs12.jlPkcs12Path.text             = PKCS #12 Key Pair File:
DImportKeyPairPkcs12.jpfPassword.tooltip           = Password used to decrypt the PKCS #12 key pair file
DImportKeyPairPkcs12.jtfPkcs12Path.tooltip         = Path to PKCS #12 key pair file

DImportKeyPairPkcs8.CertificateFileChooser.button     = Choose
DImportKeyPairPkcs8.CertificateRequired.message       = Path to certificate(s) file required.
DImportKeyPairPkcs8.ChooseCertificate.Title           = Choose Certificate(s)
DImportKeyPairPkcs8.ChoosePrivateKey.Title            = Choose PKCS #8 Private Key
DImportKeyPairPkcs8.CorruptedCerts.Cause              = The certificate(s) file is corrupted.
DImportKeyPairPkcs8.CorruptedPkcs8.Cause              = The PKCS #8 private key file is corrupted.
DImportKeyPairPkcs8.KeyPairInvalid.message            = The private key and certificate chain do not comprise a valid key pair.
DImportKeyPairPkcs8.NoCertsFound.message              = No certificates found in file ''{0}''.
DImportKeyPairPkcs8.NoLoadCerts.Problem               = Could not load the certificate(s) file ''{0}''.
DImportKeyPairPkcs8.NoLoadEncryptedPkcs8.Problem      = Could not load the encrypted PKCS #8 private key file ''{0}''.
DImportKeyPairPkcs8.NoLoadUnencryptedPkcs8.Problem    = Could not load the unencrypted PKCS #8 private key file ''{0}''.
DImportKeyPairPkcs8.NoReadFile.message                = Could not read from file ''{0}''.
DImportKeyPairPkcs8.NotCerts.Cause                    = The file is not in a supported format: X.509, PKCS #7, PKI Path or SPC.
DImportKeyPairPkcs8.NotPkcs8.Cause                    = The file is not in PKCS #8 format.
DImportKeyPairPkcs8.PasswordIncorrectPkcs8.Cause      = The supplied decryption password is not correct.
DImportKeyPairPkcs8.PrivateKeyEncrypted.message       = The PKCS #8 private key file ''{0}'' is encrypted.
DImportKeyPairPkcs8.PrivateKeyFileChooser.button      = Choose
DImportKeyPairPkcs8.PrivateKeyNotEncrypted.message    = The PKCS #8 private key file ''{0}'' is not encrypted.
DImportKeyPairPkcs8.PrivateKeyPbeNotSupported.message = The PKCS #8 private key file is protected by an unsupported encryption algorithm: ''{0}''.
DImportKeyPairPkcs8.PrivateKeyRequired.message        = Path to private key file required.
DImportKeyPairPkcs8.ProblemLoadingCerts.Title         = Problem Loading Certificate(s)
DImportKeyPairPkcs8.ProblemLoadingPkcs8.Title         = Problem Loading PKCS #8 Private Key
DImportKeyPairPkcs8.Title                             = Import PKCS #8 Key Pair
DImportKeyPairPkcs8.ViewCertificateDetails.Title      = Certificate Details for file ''{0}''
DImportKeyPairPkcs8.ViewPrivateKeyDetails.Title       = Private Key Details for file ''{0}''
DImportKeyPairPkcs8.jbCancel.text                     = Cancel
DImportKeyPairPkcs8.jbCertificateBrowse.mnemonic      = R
DImportKeyPairPkcs8.jbCertificateBrowse.text          = Browse
DImportKeyPairPkcs8.jbCertificateBrowse.tooltip       = Browse to a certificate(s) file
DImportKeyPairPkcs8.jbCertificateDetails.mnemonic     = E
DImportKeyPairPkcs8.jbCertificateDetails.text         = Details
DImportKeyPairPkcs8.jbCertificateDetails.tooltip      = Display the certificate(s) details
DImportKeyPairPkcs8.jbImport.mnemonic                 = I
DImportKeyPairPkcs8.jbImport.text                     = Import
DImportKeyPairPkcs8.jbImport.tooltip                  = Import the selected key pair
DImportKeyPairPkcs8.jbPrivateKeyBrowse.mnemonic       = B
DImportKeyPairPkcs8.jbPrivateKeyBrowse.text           = Browse
DImportKeyPairPkcs8.jbPrivateKeyBrowse.tooltip        = Browse to a PKCS #8 private key file
DImportKeyPairPkcs8.jbPrivateKeyDetails.mnemonic      = D
DImportKeyPairPkcs8.jbPrivateKeyDetails.text          = Details
DImportKeyPairPkcs8.jbPrivateKeyDetails.tooltip       = Display the private key details
DImportKeyPairPkcs8.jcbEncrypted.tooltip              = Is the PKCS #8 private key file encrypted?
DImportKeyPairPkcs8.jlCertificate.text                = Certificate(s) File:
DImportKeyPairPkcs8.jlEncrypted.text                  = Encrypted Private Key:
DImportKeyPairPkcs8.jlPassword.text                   = Decryption Password:
DImportKeyPairPkcs8.jlPrivateKey.text                 = PKCS #8 Private Key File:
DImportKeyPairPkcs8.jpfPassword.tooltip               = Password used to decrypt the PKCS #8 private key file
DImportKeyPairPkcs8.jtfCertificatePath.tooltip        = Path to certificate(s) file
DImportKeyPairPkcs8.jtfPrivateKeyPath.tooltip         = Path to PKCS #8 private key file

DImportKeyPairPvk.CertificateFileChooser.button  = Choose
DImportKeyPairPvk.CertificateRequired.message    = Path to certificate(s) file required.
DImportKeyPairPvk.ChooseCertificate.Title        = Choose Certificate(s)
DImportKeyPairPvk.ChoosePrivateKey.Title         = Choose PVK Private Key
DImportKeyPairPvk.CorruptedCerts.Cause           = The certificate(s) file is corrupted.
DImportKeyPairPvk.CorruptedPvk.Cause             = The PVK file is corrupted.
DImportKeyPairPvk.KeyPairInvalid.message         = The private key and certificate chain do not comprise a valid key pair.
DImportKeyPairPvk.NoCertsFound.message           = No certificates found in file ''{0}''.
DImportKeyPairPvk.NoLoadCerts.Problem            = Could not load the certificate(s) file ''{0}''.
DImportKeyPairPvk.NoLoadEncryptedPvk.Problem     = Could not load the encrypted PVK Private Key file ''{0}''.
DImportKeyPairPvk.NoLoadUnencryptedPvk.Problem   = Could not load the unencrypted PVK Private Key file ''{0}''.
DImportKeyPairPvk.NoReadFile.message             = Could not read from file ''{0}''.
DImportKeyPairPvk.NotCerts.Cause                 = The file is not in a supported format: X.509, PKCS #7, PKI Path or SPC.
DImportKeyPairPvk.NotPvk.Cause                   = The file is not in PVK format.
DImportKeyPairPvk.PasswordIncorrectPvk.Cause     = The supplied decryption password is not correct.
DImportKeyPairPvk.PrivateKeyEncrypted.message    = The PVK file ''{0}'' is encrypted.
DImportKeyPairPvk.PrivateKeyFileChooser.button   = Choose
DImportKeyPairPvk.PrivateKeyNotEncrypted.message = The PVK file ''{0}'' is not encrypted.
DImportKeyPairPvk.PrivateKeyRequired.message     = Path to private key file required.
DImportKeyPairPvk.ProblemLoadingCerts.Title      = Problem Loading Certificate(s)
DImportKeyPairPvk.ProblemLoadingPvk.Title        = Problem Loading PVK Private Key
DImportKeyPairPvk.Title                          = Import PVK Key Pair
DImportKeyPairPvk.ViewCertificateDetails.Title   = Certificate Details for file ''{0}''
DImportKeyPairPvk.ViewPrivateKeyDetails.Title    = Private Key Details for file ''{0}''
DImportKeyPairPvk.jbCancel.text                  = Cancel
DImportKeyPairPvk.jbCertificateBrowse.mnemonic   = R
DImportKeyPairPvk.jbCertificateBrowse.text       = Browse
DImportKeyPairPvk.jbCertificateBrowse.tooltip    = Browse to a certificate(s) file
DImportKeyPairPvk.jbCertificateDetails.mnemonic  = E
DImportKeyPairPvk.jbCertificateDetails.text      = Details
DImportKeyPairPvk.jbCertificateDetails.tooltip   = Display the certificate(s) details
DImportKeyPairPvk.jbImport.mnemonic              = I
DImportKeyPairPvk.jbImport.text                  = Import
DImportKeyPairPvk.jbImport.tooltip               = Import the selected key pair
DImportKeyPairPvk.jbPrivateKeyBrowse.mnemonic    = B
DImportKeyPairPvk.jbPrivateKeyBrowse.text        = Browse
DImportKeyPairPvk.jbPrivateKeyBrowse.tooltip     = Browse to a PVK private key file
DImportKeyPairPvk.jbPrivateKeyDetails.mnemonic   = D
DImportKeyPairPvk.jbPrivateKeyDetails.text       = Details
DImportKeyPairPvk.jbPrivateKeyDetails.tooltip    = Display the private key details
DImportKeyPairPvk.jcbEncrypted.tooltip           = Is the PVK private key file encrypted?
DImportKeyPairPvk.jlCertificate.text             = Certificate(s) File:
DImportKeyPairPvk.jlEncrypted.text               = Encrypted Private Key:
DImportKeyPairPvk.jlPassword.text                = Decryption Password:
DImportKeyPairPvk.jlPrivateKey.text              = PVK Private Key File:
DImportKeyPairPvk.jpfPassword.tooltip            = Password used to decrypt the PVK private key file
DImportKeyPairPvk.jtfCertificatePath.tooltip     = Path to certificate(s) file
DImportKeyPairPvk.jtfPrivateKeyPath.tooltip      = Path to PVK private key file

DImportKeyPairType.Title               = Import Key Pair Type
DImportKeyPairType.jbCancel.text       = Cancel
DImportKeyPairType.jbOK.text           = OK
DImportKeyPairType.jlImportType.text   = Select the type of key pair import required:
DImportKeyPairType.jrbOpenSsl.mnemonic = O
DImportKeyPairType.jrbOpenSsl.text     = OpenSSL
DImportKeyPairType.jrbOpenSsl.tooltip  = Import from an OpenSSL Private Key file and Certificate file combination
DImportKeyPairType.jrbPkcs12.mnemonic  = P
DImportKeyPairType.jrbPkcs12.text      = PKCS #12
DImportKeyPairType.jrbPkcs12.tooltip   = Import from a PKCS #12 KeyStore file
DImportKeyPairType.jrbPkcs8.mnemonic   = K
DImportKeyPairType.jrbPkcs8.text       = PKCS #8
DImportKeyPairType.jrbPkcs8.tooltip    = Import from a PKCS #8 Private Key file and Certificate file combination
DImportKeyPairType.jrbPvk.mnemonic     = V
DImportKeyPairType.jrbPvk.text         = PVK
DImportKeyPairType.jrbPvk.tooltip      = Import from a Microsoft PVK Private Key file and Certificate file combination
