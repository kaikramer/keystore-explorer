name: Create a new KSE release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:

  launcher:
    name: Build KSE launcher
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install nim mingw-w64
      - name: Build
        run: nim -d:mingw --cpu:i386 -d:release --app:gui --opt:size --out:kse-launcher.exe c kse_launcher.nim
        working-directory: kse/res
      - name: Shrink executable
        run: strip kse/res/kse-launcher.exe
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: kse-launcher
          path: kse/res/kse-launcher.exe
          if-no-files-found: error
          compression-level: 0

  windows:
    name: Create artifacts on Windows
    needs: [launcher]
    runs-on: windows-2022
    steps:
      - name: Disable automatic EOL conversions
        run: git config --global core.autocrlf false
      - name: Install required software packages
        run: choco install reshack
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
#      - uses: actions/download-artifact@v4.1.7
#        with:
#          name: kse-launcher
#          path: kse/res
      - name: Build with Gradle
        run: .\gradlew.bat test zip innosetup
        working-directory: kse
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact-exe
          path: |
            kse/build/launcher/kse.exe
          if-no-files-found: error
          compression-level: 0
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          # use second step to upload other artifacts in order to avoid sub-folders
          name: windows-artifacts
          path: |
            kse/build/distributions/kse-*.zip
            kse/build/distributions/kse-*-setup-no-jre.exe
          if-no-files-found: error
          compression-level: 0

  linux:
    name: Create artifacts on Linux
    runs-on: ubuntu-24.04
    steps:
      - name: Disable automatic EOL conversions
        run: git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        run: ./gradlew test buildDeb buildRpm
        working-directory: kse
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            kse/build/distributions/kse*.deb
            kse/build/distributions/kse*.rpm
          if-no-files-found: error
          compression-level: 0

  windows-with-jre:
    name: Create a Windows installer with included JRE
    needs: [launcher]
    runs-on: windows-2022
    steps:
      - name: Disable automatic EOL conversions
        run: git config --global core.autocrlf false
      - name: Install required software packages
        run: choco install reshack
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
#      - uses: actions/download-artifact@v4.1.7
#        with:
#          name: kse-launcher
#          path: kse/res
      - name: Build with Gradle
        run: .\gradlew.bat test innosetup --info
        working-directory: kse
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: windows-with-jre-artifact
          path: kse/build/distributions/kse-*-setup.exe
          if-no-files-found: error
          compression-level: 0

  macos:
    name: Create artifacts on macOS
    runs-on: macos-13
    steps:
      - name: Disable automatic EOL conversions
        run: git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        env:
          MACOS_CERT: ${{ secrets.MACOS_CERT }}
          MACOS_CERT_PWD: ${{ secrets.MACOS_CERT_PWD }}
        run: |
          chmod +x .github/scripts/macos-build.sh
          .github/scripts/macos-build.sh "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_x64_mac_hotspot_21.0.5_11.tar.gz"
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: kse/build/distributions/kse*.dmg
          if-no-files-found: error
          compression-level: 0

  macos-arm:
    name: Create artifacts on macOS for ARM architecture
    runs-on: macos-14
    steps:
      - name: Disable automatic EOL conversions
        run: git config --global core.autocrlf false
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        env:
          MACOS_CERT: ${{ secrets.MACOS_CERT }}
          MACOS_CERT_PWD: ${{ secrets.MACOS_CERT_PWD }}
        run: |
          chmod +x .github/scripts/macos-build.sh
          .github/scripts/macos-build.sh "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_aarch64_mac_hotspot_21.0.5_11.tar.gz"
      - name: Store artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-artifact
          path: kse/build/distributions/kse*.dmg
          if-no-files-found: error
          compression-level: 0

  release:
    needs: [windows, linux, windows-with-jre, macos, macos-arm]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true
      - name: Debug - Check current directory
        run: |
          echo "Current working directory: $(pwd)"
          echo "Contents of current directory:"
          ls -Rla
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: Create a release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          name: "KSE Release ${{ github.ref_name }}"
          body: "Release Notes are available here: [Release Notes](https://keystore-explorer.org/releases.html)"
          files: |
            kse-*.zip
            kse-*-setup.exe
            kse-*-setup-no-jre.exe
            kse*.deb
            kse*.rpm
            kse*.dmg
          token: ${{ secrets.github_token }}
      - name: VirusTotal Scan
        run: |
          chmod +x .github/scripts/virustotal-scan.sh
          .github/scripts/virustotal-scan.sh kse.exe kse-*.zip kse-*-setup.exe kse-*-setup-no-jre.exe
        env:
          VT_API_KEY: ${{ secrets.VT_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
